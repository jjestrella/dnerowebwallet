{"ast":null,"code":"import Dnero from'./services/Dnero';import Networks,{canViewSmartContracts}from'./constants/Networks';import DneroJS from\"./libs/dnerojs.esm\";export function isStakingAvailable(){return true;}export function canStakeFromHardwareWallet(){return true;}export function areSmartContractsAvailable(){var network=Dnero.getChainID();return canViewSmartContracts(network);}export function getMinStakeAmount(purpose){if(purpose===DneroJS.StakePurposes.StakeForValidator){return 2000000.0;}else if(purpose===DneroJS.StakePurposes.StakeForSentry){return 1000.0;}else if(purpose===DneroJS.StakePurposes.StakeForEliteEdge){return 10000.0;}//Unknown\nreturn 0.0;}export function getMaxStakeAmount(purpose){if(purpose===DneroJS.StakePurposes.StakeForEliteEdge){return 500000.0;}//No max\nreturn 100000000000.0;}export function getMaxDelegatedStakeAmount(purpose){if(purpose===DneroJS.StakePurposes.StakeForSentry){return 10000.0;}//Unknown\nreturn 0.0;}","map":{"version":3,"names":["Dnero","Networks","canViewSmartContracts","DneroJS","isStakingAvailable","canStakeFromHardwareWallet","areSmartContractsAvailable","network","getChainID","getMinStakeAmount","purpose","StakePurposes","StakeForValidator","StakeForSentry","StakeForEliteEdge","getMaxStakeAmount","getMaxDelegatedStakeAmount"],"sources":["/Users/jjestrella/DNERO_Protocol/dnerowebwallet/src/Flags.js"],"sourcesContent":["import Dnero from './services/Dnero';\nimport Networks, {canViewSmartContracts} from './constants/Networks';\nimport DneroJS from \"./libs/dnerojs.esm\";\n\nexport function isStakingAvailable(){\n    return true;\n}\n\nexport function canStakeFromHardwareWallet(){\n    return true;\n}\n\nexport function areSmartContractsAvailable(){\n    const network = Dnero.getChainID();\n\n    return canViewSmartContracts(network);\n}\n\nexport function getMinStakeAmount(purpose){\n    if(purpose === DneroJS.StakePurposes.StakeForValidator){\n        return 2000000.0;\n    }\n    else if(purpose === DneroJS.StakePurposes.StakeForSentry){\n        return 1000.0;\n    }\n    else if(purpose === DneroJS.StakePurposes.StakeForEliteEdge){\n        return 10000.0;\n    }\n\n    //Unknown\n    return 0.0;\n}\n\nexport function getMaxStakeAmount(purpose){\n    if(purpose === DneroJS.StakePurposes.StakeForEliteEdge){\n        return 500000.0;\n    }\n\n    //No max\n    return 100000000000.0;\n}\n\nexport function getMaxDelegatedStakeAmount(purpose){\n    if(purpose === DneroJS.StakePurposes.StakeForSentry){\n        return 10000.0;\n    }\n\n    //Unknown\n    return 0.0;\n}\n"],"mappings":"AAAA,MAAOA,MAAP,KAAkB,kBAAlB,CACA,MAAOC,SAAP,EAAkBC,qBAAlB,KAA8C,sBAA9C,CACA,MAAOC,QAAP,KAAoB,oBAApB,CAEA,MAAO,SAASC,mBAAT,EAA6B,CAChC,MAAO,KAAP,CACH,CAED,MAAO,SAASC,2BAAT,EAAqC,CACxC,MAAO,KAAP,CACH,CAED,MAAO,SAASC,2BAAT,EAAqC,CACxC,GAAMC,QAAO,CAAGP,KAAK,CAACQ,UAAN,EAAhB,CAEA,MAAON,sBAAqB,CAACK,OAAD,CAA5B,CACH,CAED,MAAO,SAASE,kBAAT,CAA2BC,OAA3B,CAAmC,CACtC,GAAGA,OAAO,GAAKP,OAAO,CAACQ,aAAR,CAAsBC,iBAArC,CAAuD,CACnD,MAAO,UAAP,CACH,CAFD,IAGK,IAAGF,OAAO,GAAKP,OAAO,CAACQ,aAAR,CAAsBE,cAArC,CAAoD,CACrD,MAAO,OAAP,CACH,CAFI,IAGA,IAAGH,OAAO,GAAKP,OAAO,CAACQ,aAAR,CAAsBG,iBAArC,CAAuD,CACxD,MAAO,QAAP,CACH,CAED;AACA,MAAO,IAAP,CACH,CAED,MAAO,SAASC,kBAAT,CAA2BL,OAA3B,CAAmC,CACtC,GAAGA,OAAO,GAAKP,OAAO,CAACQ,aAAR,CAAsBG,iBAArC,CAAuD,CACnD,MAAO,SAAP,CACH,CAED;AACA,MAAO,eAAP,CACH,CAED,MAAO,SAASE,2BAAT,CAAoCN,OAApC,CAA4C,CAC/C,GAAGA,OAAO,GAAKP,OAAO,CAACQ,aAAR,CAAsBE,cAArC,CAAoD,CAChD,MAAO,QAAP,CACH,CAED;AACA,MAAO,IAAP,CACH"},"metadata":{},"sourceType":"module"}