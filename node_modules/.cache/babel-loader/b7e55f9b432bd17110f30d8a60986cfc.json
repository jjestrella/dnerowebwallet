{"ast":null,"code":"import _defineProperty from\"/Users/jjestrella/DNERO_Protocol/dnerowebwallet/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _classCallCheck from\"/Users/jjestrella/DNERO_Protocol/dnerowebwallet/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/jjestrella/DNERO_Protocol/dnerowebwallet/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _assertThisInitialized from\"/Users/jjestrella/DNERO_Protocol/dnerowebwallet/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";import _inherits from\"/Users/jjestrella/DNERO_Protocol/dnerowebwallet/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/jjestrella/DNERO_Protocol/dnerowebwallet/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import _ from'lodash';import React from'react';import*as dnerojs from'@dnerolabs/dnero-js';import'./TxConfirmationModal.css';import connect from\"react-redux/es/connect/connect\";import Modal from'../components/Modal';import GradientButton from\"../components/buttons/GradientButton\";import Wallet from'../services/Wallet';import{approveTransactionRequest,rejectTransactionRequest}from\"../state/actions/Transactions\";import{formatNativeTokenAmountToLargestUnit,formatDNC20TokenAmountToLargestUnit,transactionRequestToTransactionType,transactionTypeToName,truncate}from\"../utils/Utils\";import{DefaultAssets,getAllAssets,tokenToAsset}from\"../constants/assets\";import{DNC20ABI}from'../constants/contracts';import FlatButton from\"../components/buttons/FlatButton\";import{store}from\"../state\";import MDSpinner from\"react-md-spinner\";import BigNumber from\"bignumber.js\";var renderDataRow=function renderDataRow(title,value){var suffix=arguments.length>2&&arguments[2]!==undefined?arguments[2]:'';var isLarge=arguments.length>3&&arguments[3]!==undefined?arguments[3]:false;suffix=suffix?suffix:'';if(value){return/*#__PURE__*/React.createElement(\"div\",{className:\"TxDataRow \".concat(isLarge?'TxDataRow--large':'')},/*#__PURE__*/React.createElement(\"div\",{className:\"TxDataRow__title\"},title),/*#__PURE__*/React.createElement(\"div\",{className:\"TxDataRow__value\"},value+suffix||''));}return null;};export var ConfirmTransactionModal=/*#__PURE__*/function(_React$Component){_inherits(ConfirmTransactionModal,_React$Component);var _super=_createSuper(ConfirmTransactionModal);function ConfirmTransactionModal(){var _this;_classCallCheck(this,ConfirmTransactionModal);_this=_super.call(this);_this.onConfirmClick=function(){// TODO approve the request if the password matches\n// this.props.dispatch(createSendTransaction(this.props.network, this.props.transaction, this.state.password));\nvar transactionRequest=_this.props.transactionRequest;_this.props.dispatch(approveTransactionRequest(transactionRequest.id,_this.state.password));};_this.onRejectClick=function(){var transactionRequest=_this.props.transactionRequest;_this.props.dispatch(rejectTransactionRequest(transactionRequest.id));};_this.renderDataRows=function(){var _this$props=_this.props,selectedAddress=_this$props.selectedAddress,transactionRequest=_this$props.transactionRequest,assets=_this$props.assets;var txType=_.get(transactionRequest,'txType');var txData=_.get(transactionRequest,'txData');var stakePurpose=_.get(transactionRequest,'txData.purpose');if(txType===dnerojs.constants.TxType.Send){var dneroWei=_.get(transactionRequest,'txData.outputs[0].dneroWei',null);var dtokenWei=_.get(transactionRequest,'txData.outputs[0].dtokenWei',null);return/*#__PURE__*/React.createElement(React.Fragment,null,renderDataRow('Transaction Type',transactionTypeToName(txType)),renderDataRow('From',truncate(selectedAddress)),renderDataRow('To',truncate(_.get(transactionRequest,'txData.outputs[0].address'))),dneroWei&&dneroWei!=='0'&&renderDataRow('Amount',formatNativeTokenAmountToLargestUnit(dneroWei),' DNERO'),dtokenWei&&dtokenWei!=='0'&&renderDataRow('Amount',formatNativeTokenAmountToLargestUnit(dtokenWei),' DTOKEN'));}if(txType===dnerojs.constants.TxType.SmartContract){var transactionName=transactionRequestToTransactionType(transactionRequest);var contractAddress=_.get(transactionRequest,'txData.to',null);var value=_.get(transactionRequest,'txData.value');var asset=_.find(assets,function(a){return a.contractAddress===contractAddress;});var transferToAddress=null;var transferToValue=null;var symbol=null;var decimals=null;try{var contractData=_.get(txData,'data');var dnc20Contract=new dnerojs.Contract(null,DNC20ABI,null);var data=dnc20Contract.interface.decodeFunctionData('transfer(address,uint256)',contractData);transferToAddress=data[0];transferToValue=data[1].toString();symbol=asset&&asset.symbol;decimals=asset&&asset.decimals;}catch(e){}return/*#__PURE__*/React.createElement(React.Fragment,null,renderDataRow('Transaction Type',transactionName),!_.isNil(contractAddress)&&renderDataRow('Contract',truncate(_.get(transactionRequest,'txData.to'))),renderDataRow('From',truncate(selectedAddress)),!_.isNil(transferToAddress)&&renderDataRow('To',truncate(transferToAddress)),!_.isNil(transferToAddress)&&symbol&&transferToValue&&renderDataRow('Token Amount',formatDNC20TokenAmountToLargestUnit(transferToValue,decimals),\" \".concat(symbol)),!_.isNil(value)&&value>0&&renderDataRow('Value',formatNativeTokenAmountToLargestUnit(value),' DTOKEN'),renderDataRow('Data',_.get(transactionRequest,'txData.data'),null,true));}if(txType===dnerojs.constants.TxType.WithdrawStake){return/*#__PURE__*/React.createElement(React.Fragment,null,renderDataRow('Transaction Type',transactionTypeToName(txType)),renderDataRow('From',truncate(selectedAddress)),renderDataRow('Holder',truncate(_.get(transactionRequest,'txData.holder'))));}if(txType===dnerojs.constants.TxType.DepositStake){return/*#__PURE__*/React.createElement(React.Fragment,null,renderDataRow('Transaction Type',transactionTypeToName(txType)),renderDataRow('Purpose','Validator Node'),renderDataRow('From',truncate(selectedAddress)),renderDataRow('Holder',truncate(_.get(transactionRequest,'txData.holder'))),renderDataRow('Amount',formatNativeTokenAmountToLargestUnit(_.get(transactionRequest,'txData.amount')),' DNERO'));}if(txType===dnerojs.constants.TxType.DepositStakeV2){return/*#__PURE__*/React.createElement(React.Fragment,null,renderDataRow('Transaction Type',transactionTypeToName(txType)),stakePurpose===dnerojs.constants.StakePurpose.StakeForEliteEdge&&renderDataRow('Purpose','Edge Node'),stakePurpose===dnerojs.constants.StakePurpose.StakeForSentry&&renderDataRow('Purpose','Sentry Node'),renderDataRow('From',truncate(selectedAddress)),renderDataRow('Holder summary',_.get(transactionRequest,'txData.holderSummary'),null,true),stakePurpose===dnerojs.constants.StakePurpose.StakeForEliteEdge&&renderDataRow('Amount',formatNativeTokenAmountToLargestUnit(_.get(transactionRequest,'txData.amount')),' DTOKEN'),stakePurpose===dnerojs.constants.StakePurpose.StakeForSentry&&renderDataRow('Amount',formatNativeTokenAmountToLargestUnit(_.get(transactionRequest,'txData.amount')),' DNERO'));}};_this.calculateTotalGasPrice=function(){var _transactionRequest$g;var transactionRequest=_this.props.transactionRequest;if(transactionRequest===null||transactionRequest===void 0?void 0:(_transactionRequest$g=transactionRequest.gasFeeData)===null||_transactionRequest$g===void 0?void 0:_transactionRequest$g.totalGasFee){var dependencyGasFee=new BigNumber(_.get(transactionRequest,['dependencies',0,'gasFeeData','totalGasFee'],'0'));return new BigNumber(transactionRequest.gasFeeData.totalGasFee||'0').plus(dependencyGasFee);}};_this.state={password:'',estimatedGasFee:null};_this.handleChange=_this.handleChange.bind(_assertThisInitialized(_this));return _this;}_createClass(ConfirmTransactionModal,[{key:\"handleChange\",value:function handleChange(event){var name=event.target.name;var value=event.target.value;this.setState(_defineProperty({},name,value));}},{key:\"render\",value:function render(){var transactionRequest=this.props.transactionRequest;var isValid=Wallet.getWalletHardware()||this.state.password.length>0;var txDataRows=this.renderDataRows();var passwordRow=null;if(!Wallet.getWalletHardware()){passwordRow=/*#__PURE__*/React.createElement(\"div\",{className:\"TxConfirmationModal__password-container\"},/*#__PURE__*/React.createElement(\"div\",{className:\"TxConfirmationModal__password-title\"},\"Enter your wallet password to sign this transaction\"),/*#__PURE__*/React.createElement(\"input\",{className:\"ChoosePasswordCard__password-input\",placeholder:\"Enter wallet password\",name:\"password\",type:\"password\",value:this.state.password,onChange:this.handleChange.bind(this)}));}return/*#__PURE__*/React.createElement(Modal,{closeable:false},/*#__PURE__*/React.createElement(\"div\",{className:\"TxConfirmationModal\"},/*#__PURE__*/React.createElement(\"div\",{className:\"ModalTitle\"},\"Confirm Transaction\"),/*#__PURE__*/React.createElement(\"div\",{className:'TxDataRows'},txDataRows,/*#__PURE__*/React.createElement(\"div\",{className:\"TxDataRow\"},/*#__PURE__*/React.createElement(\"div\",{className:\"TxDataRow__title\"},\"Estimated Gas Fee\"),_.isNil(transactionRequest===null||transactionRequest===void 0?void 0:transactionRequest.gasFeeData)&&/*#__PURE__*/React.createElement(\"div\",{className:\"TxDataRow__value\"},/*#__PURE__*/React.createElement(MDSpinner,{singleColor:'#1BDED0',size:20})),!_.isNil(transactionRequest===null||transactionRequest===void 0?void 0:transactionRequest.gasFeeData)&&/*#__PURE__*/React.createElement(\"div\",{className:\"TxDataRow__value\"},/*#__PURE__*/React.createElement(\"span\",null,\"\".concat(formatNativeTokenAmountToLargestUnit(this.calculateTotalGasPrice()),\" DTOKEN\"))))),passwordRow,/*#__PURE__*/React.createElement(\"div\",{className:'TxConfirmationModal__footer'},/*#__PURE__*/React.createElement(FlatButton,{title:'Reject',className:'ConfirmTransactionPage__reject-button',size:'large',onClick:this.onRejectClick,borderless:true,centered:true}),/*#__PURE__*/React.createElement(GradientButton,{title:'Confirm',className:'ConfirmTransactionPage__confirm-button',disabled:isValid===false,onClick:this.onConfirmClick}))));}}]);return ConfirmTransactionModal;}(React.Component);var mapStateToProps=function mapStateToProps(state){var dneroWallet=state.dneroWallet;var selectedAddress=dneroWallet.selectedAddress;var identities=dneroWallet.identities;var accounts=dneroWallet.accounts;var transactionRequest=state.dneroWallet.transactionRequests[0];var tokens=dneroWallet.tokens;var chainId=dneroWallet.network.chainId;return{selectedAddress:selectedAddress,selectedIdentity:identities[selectedAddress],selectedAccount:accounts[selectedAddress],assets:getAllAssets(chainId,tokens),transactionRequest:transactionRequest};};export default connect(mapStateToProps)(ConfirmTransactionModal);","map":{"version":3,"names":["_","React","dnerojs","connect","Modal","GradientButton","Wallet","approveTransactionRequest","rejectTransactionRequest","formatNativeTokenAmountToLargestUnit","formatDNC20TokenAmountToLargestUnit","transactionRequestToTransactionType","transactionTypeToName","truncate","DefaultAssets","getAllAssets","tokenToAsset","DNC20ABI","FlatButton","store","MDSpinner","BigNumber","renderDataRow","title","value","suffix","isLarge","ConfirmTransactionModal","onConfirmClick","transactionRequest","props","dispatch","id","state","password","onRejectClick","renderDataRows","selectedAddress","assets","txType","get","txData","stakePurpose","constants","TxType","Send","dneroWei","dtokenWei","SmartContract","transactionName","contractAddress","asset","find","a","transferToAddress","transferToValue","symbol","decimals","contractData","dnc20Contract","Contract","data","interface","decodeFunctionData","toString","e","isNil","WithdrawStake","DepositStake","DepositStakeV2","StakePurpose","StakeForEliteEdge","StakeForSentry","calculateTotalGasPrice","gasFeeData","totalGasFee","dependencyGasFee","plus","estimatedGasFee","handleChange","bind","event","name","target","setState","isValid","getWalletHardware","length","txDataRows","passwordRow","Component","mapStateToProps","dneroWallet","identities","accounts","transactionRequests","tokens","chainId","network","selectedIdentity","selectedAccount"],"sources":["/Users/jjestrella/DNERO_Protocol/dnerowebwallet/src/modals/ConfirmTransactionModal.js"],"sourcesContent":["import _ from 'lodash';\nimport React from 'react';\nimport * as dnerojs from '@dnerolabs/dnero-js';\nimport './TxConfirmationModal.css';\nimport connect from \"react-redux/es/connect/connect\";\nimport Modal from '../components/Modal'\nimport GradientButton from \"../components/buttons/GradientButton\";\nimport Wallet from '../services/Wallet'\nimport {\n    approveTransactionRequest,\n    rejectTransactionRequest\n} from \"../state/actions/Transactions\";\nimport {\n    formatNativeTokenAmountToLargestUnit, formatDNC20TokenAmountToLargestUnit,\n    transactionRequestToTransactionType,\n    transactionTypeToName, truncate\n} from \"../utils/Utils\";\nimport {DefaultAssets, getAllAssets, tokenToAsset} from \"../constants/assets\";\nimport {DNC20ABI} from '../constants/contracts';\nimport FlatButton from \"../components/buttons/FlatButton\";\nimport {store} from \"../state\";\nimport MDSpinner from \"react-md-spinner\";\nimport BigNumber from \"bignumber.js\";\n\n\nconst renderDataRow = (title, value, suffix = '', isLarge = false) => {\n    suffix = suffix ? suffix : '';\n\n    if(value){\n        return (\n            <div className={`TxDataRow ${isLarge ? 'TxDataRow--large' : ''}`}>\n                <div className=\"TxDataRow__title\">\n                    {title}\n                </div>\n                <div className=\"TxDataRow__value\">\n                    {value + suffix || ''}\n                </div>\n            </div>\n        );\n    }\n    return null;\n};\n\nexport class ConfirmTransactionModal extends React.Component {\n    constructor(){\n        super();\n\n        this.state = {\n            password: '',\n            estimatedGasFee: null\n        };\n\n        this.handleChange = this.handleChange.bind(this);\n    }\n\n    handleChange(event) {\n        let name = event.target.name;\n        let value = event.target.value;\n\n        this.setState({[name]: value});\n    }\n\n    onConfirmClick = () => {\n        // TODO approve the request if the password matches\n        // this.props.dispatch(createSendTransaction(this.props.network, this.props.transaction, this.state.password));\n        const {transactionRequest} = this.props;\n        this.props.dispatch(approveTransactionRequest(transactionRequest.id, this.state.password));\n    }\n\n    onRejectClick = () => {\n        const {transactionRequest} = this.props;\n        this.props.dispatch(rejectTransactionRequest(transactionRequest.id));\n    }\n\n    renderDataRows = () => {\n        const {selectedAddress, transactionRequest, assets} = this.props;\n        const txType = _.get(transactionRequest, 'txType');\n        const txData = _.get(transactionRequest, 'txData');\n        const stakePurpose = _.get(transactionRequest, 'txData.purpose');\n\n        if(txType === dnerojs.constants.TxType.Send){\n            const dneroWei = _.get(transactionRequest, 'txData.outputs[0].dneroWei', null);\n            const dtokenWei = _.get(transactionRequest, 'txData.outputs[0].dtokenWei', null);\n\n            return (\n                <React.Fragment>\n                    { renderDataRow('Transaction Type', transactionTypeToName(txType)) }\n                    { renderDataRow('From', truncate(selectedAddress)) }\n                    { renderDataRow('To', truncate(_.get(transactionRequest, 'txData.outputs[0].address'))) }\n                    { dneroWei && (dneroWei !== '0') && renderDataRow('Amount', formatNativeTokenAmountToLargestUnit(dneroWei), ' DNERO') }\n                    { dtokenWei && (dtokenWei !== '0') && renderDataRow('Amount', formatNativeTokenAmountToLargestUnit(dtokenWei), ' DTOKEN') }\n                </React.Fragment>\n            );\n        }\n        if(txType === dnerojs.constants.TxType.SmartContract){\n            const transactionName = transactionRequestToTransactionType(transactionRequest);\n            const contractAddress = _.get(transactionRequest, 'txData.to', null);\n            const value = _.get(transactionRequest, 'txData.value');\n            const asset = _.find(assets, function (a) {\n                return a.contractAddress === contractAddress;\n            });\n            let transferToAddress = null;\n            let transferToValue = null;\n            let symbol = null;\n            let decimals = null;\n\n            try {\n                const contractData = _.get(txData, 'data');\n                const dnc20Contract = new dnerojs.Contract(null, DNC20ABI, null);\n                const data = dnc20Contract.interface.decodeFunctionData('transfer(address,uint256)',contractData);\n                transferToAddress = data[0];\n                transferToValue = data[1].toString();\n                symbol = asset && asset.symbol;\n                decimals = asset && asset.decimals;\n            }\n            catch (e) {\n\n            }\n\n            return (\n                <React.Fragment>\n                    { renderDataRow('Transaction Type', transactionName) }\n                    { !_.isNil(contractAddress) && renderDataRow('Contract', truncate(_.get(transactionRequest, 'txData.to'))) }\n                    { renderDataRow('From', truncate(selectedAddress)) }\n                    { !_.isNil(transferToAddress) && renderDataRow('To', truncate(transferToAddress)) }\n                    { (!_.isNil(transferToAddress) && symbol && transferToValue) && renderDataRow('Token Amount', formatDNC20TokenAmountToLargestUnit(transferToValue, decimals), ` ${symbol}`) }\n                    { (!_.isNil(value) && value > 0) && renderDataRow('Value', formatNativeTokenAmountToLargestUnit(value), ' DTOKEN') }\n                    { renderDataRow('Data', _.get(transactionRequest, 'txData.data'), null, true) }\n\n                </React.Fragment>\n            );\n        }\n        if(txType === dnerojs.constants.TxType.WithdrawStake){\n            return (\n                <React.Fragment>\n                    { renderDataRow('Transaction Type', transactionTypeToName(txType)) }\n                    { renderDataRow('From', truncate(selectedAddress)) }\n                    { renderDataRow('Holder', truncate(_.get(transactionRequest, 'txData.holder'))) }\n                </React.Fragment>\n            );\n        }\n        if(txType === dnerojs.constants.TxType.DepositStake){\n            return (\n                <React.Fragment>\n                    { renderDataRow('Transaction Type', transactionTypeToName(txType)) }\n                    { renderDataRow('Purpose', 'Validator Node') }\n                    { renderDataRow('From', truncate(selectedAddress)) }\n                    { renderDataRow('Holder', truncate(_.get(transactionRequest, 'txData.holder'))) }\n                    { renderDataRow('Amount', formatNativeTokenAmountToLargestUnit(_.get(transactionRequest, 'txData.amount')), ' DNERO') }\n                </React.Fragment>\n            );\n        }\n        if(txType === dnerojs.constants.TxType.DepositStakeV2){\n            return (\n                <React.Fragment>\n                    { renderDataRow('Transaction Type', transactionTypeToName(txType)) }\n                    {\n                        (stakePurpose === dnerojs.constants.StakePurpose.StakeForEliteEdge) &&\n                        renderDataRow('Purpose', 'Edge Node')\n                    }\n                    {\n                        (stakePurpose === dnerojs.constants.StakePurpose.StakeForSentry) &&\n                        renderDataRow('Purpose', 'Sentry Node')\n                    }\n                    { renderDataRow('From', truncate(selectedAddress)) }\n                    { renderDataRow('Holder summary', _.get(transactionRequest, 'txData.holderSummary'), null, true) }\n                    {\n                        (stakePurpose === dnerojs.constants.StakePurpose.StakeForEliteEdge) &&\n                        renderDataRow('Amount', formatNativeTokenAmountToLargestUnit(_.get(transactionRequest, 'txData.amount')), ' DTOKEN')\n                    }\n                    {\n                        (stakePurpose === dnerojs.constants.StakePurpose.StakeForSentry) &&\n                        renderDataRow('Amount', formatNativeTokenAmountToLargestUnit(_.get(transactionRequest, 'txData.amount')), ' DNERO')\n                    }\n                </React.Fragment>\n            );\n        }\n    };\n\n    calculateTotalGasPrice = () => {\n        const {transactionRequest} = this.props;\n\n        if(transactionRequest?.gasFeeData?.totalGasFee){\n            const dependencyGasFee = new BigNumber(_.get(transactionRequest, ['dependencies', 0, 'gasFeeData', 'totalGasFee'], '0'));\n\n            return (new BigNumber(transactionRequest.gasFeeData.totalGasFee || '0')).plus(dependencyGasFee);\n        }\n    }\n\n    render() {\n        const {transactionRequest} = this.props;\n        let isValid = Wallet.getWalletHardware() || this.state.password.length > 0;\n        let txDataRows = this.renderDataRows();\n        let passwordRow = null;\n\n        if(!Wallet.getWalletHardware()){\n            passwordRow = (\n                <div className=\"TxConfirmationModal__password-container\">\n                    <div className=\"TxConfirmationModal__password-title\">Enter your wallet password to sign this transaction</div>\n                    <input className=\"ChoosePasswordCard__password-input\"\n                           placeholder=\"Enter wallet password\"\n                           name=\"password\"\n                           type=\"password\"\n                           value={this.state.password}\n                           onChange={this.handleChange.bind(this)}\n                    />\n                </div>\n            );\n        }\n\n        return (\n            <Modal closeable={false}>\n                <div className=\"TxConfirmationModal\">\n                    <div className=\"ModalTitle\">\n                        Confirm Transaction\n                    </div>\n\n                    <div className={'TxDataRows'}>\n                        {\n                            txDataRows\n                        }\n                        <div className={`TxDataRow`}>\n                            <div className=\"TxDataRow__title\">\n                                Estimated Gas Fee\n                            </div>\n                            {\n                                _.isNil(transactionRequest?.gasFeeData) &&\n                                <div className=\"TxDataRow__value\">\n                                    <MDSpinner singleColor={'#1BDED0'} size={20}/>\n                                </div>\n                            }\n                            {\n                                !_.isNil(transactionRequest?.gasFeeData) &&\n                                <div className=\"TxDataRow__value\">\n                                    <span>{`${formatNativeTokenAmountToLargestUnit(this.calculateTotalGasPrice())} DTOKEN`}</span>\n                                </div>\n                            }\n                        </div>\n                    </div>\n\n                    { passwordRow }\n\n                    <div className={'TxConfirmationModal__footer'}>\n                        <FlatButton title={'Reject'}\n                                    className={'ConfirmTransactionPage__reject-button'}\n                                    size={'large'}\n                                    onClick={this.onRejectClick}\n                                    borderless centered/>\n                        <GradientButton title={'Confirm'}\n                                        className={'ConfirmTransactionPage__confirm-button'}\n                                        disabled={isValid === false}\n                                        onClick={this.onConfirmClick}\n                        />\n                    </div>\n\n                </div>\n            </Modal>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    const { dneroWallet } = state;\n    const selectedAddress = dneroWallet.selectedAddress;\n    const identities = dneroWallet.identities;\n    const accounts = dneroWallet.accounts;\n    const transactionRequest = state.dneroWallet.transactionRequests[0];\n    const tokens = dneroWallet.tokens;\n    const chainId = dneroWallet.network.chainId;\n\n    return {\n        selectedAddress: selectedAddress,\n        selectedIdentity: identities[selectedAddress],\n        selectedAccount: accounts[selectedAddress],\n        assets: getAllAssets(chainId, tokens),\n        transactionRequest: transactionRequest,\n    };\n};\n\nexport default connect(mapStateToProps)(ConfirmTransactionModal);\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}