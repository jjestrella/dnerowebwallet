{"ast":null,"code":"/*\n    This file is part of web3.js.\n    web3.js is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Lesser General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n    web3.js is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Lesser General Public License for more details.\n    You should have received a copy of the GNU Lesser General Public License\n    along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\n/**\n * @file ResolverMethodHandler.js\n *\n * @author Samuel Furter <samuel@ethereum.org>\n * @date 2018\n */\n\"use strict\";\n\nvar _asyncToGenerator = require(\"/Users/jjestrella/DNERO_Protocol/dnerowebwallet/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/asyncToGenerator\");\n\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, $Symbol = \"function\" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || \"@@iterator\", asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\", toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, \"\"); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return generator._invoke = function (innerFn, self, context) { var state = \"suspendedStart\"; return function (method, arg) { if (\"executing\" === state) throw new Error(\"Generator is already running\"); if (\"completed\" === state) { if (\"throw\" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) { if (\"suspendedStart\" === state) throw state = \"completed\", context.arg; context.dispatchException(context.arg); } else \"return\" === context.method && context.abrupt(\"return\", context.arg); state = \"executing\"; var record = tryCatch(innerFn, self, context); if (\"normal\" === record.type) { if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg); } }; }(innerFn, self, context), generator; } function tryCatch(fn, obj, arg) { try { return { type: \"normal\", arg: fn.call(obj, arg) }; } catch (err) { return { type: \"throw\", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { [\"next\", \"throw\", \"return\"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if (\"throw\" !== record.type) { var result = record.arg, value = result.value; return value && \"object\" == typeof value && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke(\"next\", value, resolve, reject); }, function (err) { invoke(\"throw\", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke(\"throw\", error, resolve, reject); }); } reject(record.arg); } var previousPromise; this._invoke = function (method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); }; } function maybeInvokeDelegate(delegate, context) { var method = delegate.iterator[context.method]; if (undefined === method) { if (context.delegate = null, \"throw\" === context.method) { if (delegate.iterator.return && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method)) return ContinueSentinel; context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a 'throw' method\"); } return ContinueSentinel; } var record = tryCatch(method, delegate.iterator, context.arg); if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = \"normal\", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: \"root\" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if (\"function\" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) { if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; } return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, define(Gp, \"constructor\", GeneratorFunctionPrototype), define(GeneratorFunctionPrototype, \"constructor\", GeneratorFunction), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) { var ctor = \"function\" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, \"toString\", function () { return \"[object Generator]\"; }), exports.keys = function (object) { var keys = []; for (var key in object) { keys.push(key); } return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) { \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); } }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if (\"throw\" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if (\"root\" === entry.tryLoc) return handle(\"end\"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, \"catchLoc\"), hasFinally = hasOwn.call(entry, \"finallyLoc\"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error(\"try statement without catch or finally\"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if (\"throw\" === record.type) throw record.arg; return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, catch: function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if (\"throw\" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }\n\nvar PromiEvent = require('web3-core-promievent');\n\nvar namehash = require('eth-ens-namehash');\n\nvar errors = require('web3-core-helpers').errors;\n\nvar interfaceIds = require('../config').interfaceIds;\n/**\n * @param {Registry} registry\n * @constructor\n */\n\n\nfunction ResolverMethodHandler(registry) {\n  this.registry = registry;\n}\n/**\n * Executes an resolver method and returns an eventifiedPromise\n *\n * @param {string} ensName\n * @param {string} methodName\n * @param {array} methodArguments\n * @param {function} callback\n * @returns {Object}\n */\n\n\nResolverMethodHandler.prototype.method = function (ensName, methodName, methodArguments, outputFormatter, callback) {\n  return {\n    call: this.call.bind({\n      ensName: ensName,\n      methodName: methodName,\n      methodArguments: methodArguments,\n      callback: callback,\n      parent: this,\n      outputFormatter: outputFormatter\n    }),\n    send: this.send.bind({\n      ensName: ensName,\n      methodName: methodName,\n      methodArguments: methodArguments,\n      callback: callback,\n      parent: this\n    })\n  };\n};\n/**\n * Executes call\n *\n * @returns {eventifiedPromise}\n */\n\n\nResolverMethodHandler.prototype.call = function (callback) {\n  var self = this;\n  var promiEvent = new PromiEvent();\n  var preparedArguments = this.parent.prepareArguments(this.ensName, this.methodArguments);\n  var outputFormatter = this.outputFormatter || null;\n  this.parent.registry.getResolver(this.ensName).then( /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(resolver) {\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return self.parent.checkInterfaceSupport(resolver, self.methodName);\n\n            case 2:\n              self.parent.handleCall(promiEvent, resolver.methods[self.methodName], preparedArguments, outputFormatter, callback);\n\n            case 3:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function (_x) {\n      return _ref.apply(this, arguments);\n    };\n  }()).catch(function (error) {\n    if (typeof callback === 'function') {\n      callback(error, null);\n      return;\n    }\n\n    promiEvent.reject(error);\n  });\n  return promiEvent.eventEmitter;\n};\n/**\n * Executes send\n *\n * @param {Object} sendOptions\n * @param {function} callback\n * @returns {eventifiedPromise}\n */\n\n\nResolverMethodHandler.prototype.send = function (sendOptions, callback) {\n  var self = this;\n  var promiEvent = new PromiEvent();\n  var preparedArguments = this.parent.prepareArguments(this.ensName, this.methodArguments);\n  this.parent.registry.getResolver(this.ensName).then( /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(resolver) {\n      return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return self.parent.checkInterfaceSupport(resolver, self.methodName);\n\n            case 2:\n              self.parent.handleSend(promiEvent, resolver.methods[self.methodName], preparedArguments, sendOptions, callback);\n\n            case 3:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function (_x2) {\n      return _ref2.apply(this, arguments);\n    };\n  }()).catch(function (error) {\n    if (typeof callback === 'function') {\n      callback(error, null);\n      return;\n    }\n\n    promiEvent.reject(error);\n  });\n  return promiEvent.eventEmitter;\n};\n/**\n * Handles a call method\n *\n * @param {eventifiedPromise} promiEvent\n * @param {function} method\n * @param {array} preparedArguments\n * @param {function} callback\n * @returns {eventifiedPromise}\n */\n\n\nResolverMethodHandler.prototype.handleCall = function (promiEvent, method, preparedArguments, outputFormatter, callback) {\n  method.apply(this, preparedArguments).call().then(function (result) {\n    if (outputFormatter) {\n      result = outputFormatter(result);\n    }\n\n    if (typeof callback === 'function') {\n      // It's required to pass the receipt to the second argument to be backwards compatible and to have the required consistency\n      callback(result, result);\n      return;\n    }\n\n    promiEvent.resolve(result);\n  }).catch(function (error) {\n    if (typeof callback === 'function') {\n      callback(error, null);\n      return;\n    }\n\n    promiEvent.reject(error);\n  });\n  return promiEvent;\n};\n/**\n * Handles a send method\n *\n * @param {eventifiedPromise} promiEvent\n * @param {function} method\n * @param {array} preparedArguments\n * @param {Object} sendOptions\n * @param {function} callback\n * @returns {eventifiedPromise}\n */\n\n\nResolverMethodHandler.prototype.handleSend = function (promiEvent, method, preparedArguments, sendOptions, callback) {\n  method.apply(this, preparedArguments).send(sendOptions).on('sending', function () {\n    promiEvent.eventEmitter.emit('sending');\n  }).on('sent', function () {\n    promiEvent.eventEmitter.emit('sent');\n  }).on('transactionHash', function (hash) {\n    promiEvent.eventEmitter.emit('transactionHash', hash);\n  }).on('confirmation', function (confirmationNumber, receipt) {\n    promiEvent.eventEmitter.emit('confirmation', confirmationNumber, receipt);\n  }).on('receipt', function (receipt) {\n    promiEvent.eventEmitter.emit('receipt', receipt);\n    promiEvent.resolve(receipt);\n\n    if (typeof callback === 'function') {\n      // It's required to pass the receipt to the second argument to be backwards compatible and to have the required consistency\n      callback(receipt, receipt);\n    }\n  }).on('error', function (error) {\n    promiEvent.eventEmitter.emit('error', error);\n\n    if (typeof callback === 'function') {\n      callback(error, null);\n      return;\n    }\n\n    promiEvent.reject(error);\n  });\n  return promiEvent;\n};\n/**\n * Adds the ENS node to the arguments\n *\n * @param {string} name\n * @param {array} methodArguments\n *\n * @returns {array}\n */\n\n\nResolverMethodHandler.prototype.prepareArguments = function (name, methodArguments) {\n  var node = namehash.hash(name);\n\n  if (methodArguments.length > 0) {\n    methodArguments.unshift(node);\n    return methodArguments;\n  }\n\n  return [node];\n};\n/**\n *\n *\n * @param {Contract} resolver\n * @param {string} methodName\n *\n * @returns {Promise}\n */\n\n\nResolverMethodHandler.prototype.checkInterfaceSupport = /*#__PURE__*/function () {\n  var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3(resolver, methodName) {\n    var supported;\n    return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            if (interfaceIds[methodName]) {\n              _context3.next = 2;\n              break;\n            }\n\n            return _context3.abrupt(\"return\");\n\n          case 2:\n            supported = false;\n            _context3.prev = 3;\n            _context3.next = 6;\n            return resolver.methods.supportsInterface(interfaceIds[methodName]).call();\n\n          case 6:\n            supported = _context3.sent;\n            _context3.next = 12;\n            break;\n\n          case 9:\n            _context3.prev = 9;\n            _context3.t0 = _context3[\"catch\"](3);\n            console.warn('Could not verify interface of resolver contract at \"' + resolver.options.address + '\". ');\n\n          case 12:\n            if (supported) {\n              _context3.next = 14;\n              break;\n            }\n\n            throw errors.ResolverMethodMissingError(resolver.options.address, methodName);\n\n          case 14:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3, null, [[3, 9]]);\n  }));\n\n  return function (_x3, _x4) {\n    return _ref3.apply(this, arguments);\n  };\n}();\n\nmodule.exports = ResolverMethodHandler;","map":{"version":3,"names":["PromiEvent","require","namehash","errors","interfaceIds","ResolverMethodHandler","registry","prototype","method","ensName","methodName","methodArguments","outputFormatter","callback","call","bind","parent","send","self","promiEvent","preparedArguments","prepareArguments","getResolver","then","resolver","checkInterfaceSupport","handleCall","methods","catch","error","reject","eventEmitter","sendOptions","handleSend","apply","result","resolve","on","emit","hash","confirmationNumber","receipt","name","node","length","unshift","supported","supportsInterface","console","warn","options","address","ResolverMethodMissingError","module","exports"],"sources":["/Users/jjestrella/DNERO_Protocol/dnerowebwallet/node_modules/web3-eth-ens/lib/lib/ResolverMethodHandler.js"],"sourcesContent":["/*\n    This file is part of web3.js.\n    web3.js is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Lesser General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n    web3.js is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Lesser General Public License for more details.\n    You should have received a copy of the GNU Lesser General Public License\n    along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n/**\n * @file ResolverMethodHandler.js\n *\n * @author Samuel Furter <samuel@ethereum.org>\n * @date 2018\n */\n\"use strict\";\nvar PromiEvent = require('web3-core-promievent');\nvar namehash = require('eth-ens-namehash');\nvar errors = require('web3-core-helpers').errors;\nvar interfaceIds = require('../config').interfaceIds;\n/**\n * @param {Registry} registry\n * @constructor\n */\nfunction ResolverMethodHandler(registry) {\n    this.registry = registry;\n}\n/**\n * Executes an resolver method and returns an eventifiedPromise\n *\n * @param {string} ensName\n * @param {string} methodName\n * @param {array} methodArguments\n * @param {function} callback\n * @returns {Object}\n */\nResolverMethodHandler.prototype.method = function (ensName, methodName, methodArguments, outputFormatter, callback) {\n    return {\n        call: this.call.bind({\n            ensName: ensName,\n            methodName: methodName,\n            methodArguments: methodArguments,\n            callback: callback,\n            parent: this,\n            outputFormatter: outputFormatter\n        }),\n        send: this.send.bind({\n            ensName: ensName,\n            methodName: methodName,\n            methodArguments: methodArguments,\n            callback: callback,\n            parent: this\n        })\n    };\n};\n/**\n * Executes call\n *\n * @returns {eventifiedPromise}\n */\nResolverMethodHandler.prototype.call = function (callback) {\n    var self = this;\n    var promiEvent = new PromiEvent();\n    var preparedArguments = this.parent.prepareArguments(this.ensName, this.methodArguments);\n    var outputFormatter = this.outputFormatter || null;\n    this.parent.registry.getResolver(this.ensName).then(async function (resolver) {\n        await self.parent.checkInterfaceSupport(resolver, self.methodName);\n        self.parent.handleCall(promiEvent, resolver.methods[self.methodName], preparedArguments, outputFormatter, callback);\n    }).catch(function (error) {\n        if (typeof callback === 'function') {\n            callback(error, null);\n            return;\n        }\n        promiEvent.reject(error);\n    });\n    return promiEvent.eventEmitter;\n};\n/**\n * Executes send\n *\n * @param {Object} sendOptions\n * @param {function} callback\n * @returns {eventifiedPromise}\n */\nResolverMethodHandler.prototype.send = function (sendOptions, callback) {\n    var self = this;\n    var promiEvent = new PromiEvent();\n    var preparedArguments = this.parent.prepareArguments(this.ensName, this.methodArguments);\n    this.parent.registry.getResolver(this.ensName).then(async function (resolver) {\n        await self.parent.checkInterfaceSupport(resolver, self.methodName);\n        self.parent.handleSend(promiEvent, resolver.methods[self.methodName], preparedArguments, sendOptions, callback);\n    }).catch(function (error) {\n        if (typeof callback === 'function') {\n            callback(error, null);\n            return;\n        }\n        promiEvent.reject(error);\n    });\n    return promiEvent.eventEmitter;\n};\n/**\n * Handles a call method\n *\n * @param {eventifiedPromise} promiEvent\n * @param {function} method\n * @param {array} preparedArguments\n * @param {function} callback\n * @returns {eventifiedPromise}\n */\nResolverMethodHandler.prototype.handleCall = function (promiEvent, method, preparedArguments, outputFormatter, callback) {\n    method.apply(this, preparedArguments).call()\n        .then(function (result) {\n        if (outputFormatter) {\n            result = outputFormatter(result);\n        }\n        if (typeof callback === 'function') {\n            // It's required to pass the receipt to the second argument to be backwards compatible and to have the required consistency\n            callback(result, result);\n            return;\n        }\n        promiEvent.resolve(result);\n    }).catch(function (error) {\n        if (typeof callback === 'function') {\n            callback(error, null);\n            return;\n        }\n        promiEvent.reject(error);\n    });\n    return promiEvent;\n};\n/**\n * Handles a send method\n *\n * @param {eventifiedPromise} promiEvent\n * @param {function} method\n * @param {array} preparedArguments\n * @param {Object} sendOptions\n * @param {function} callback\n * @returns {eventifiedPromise}\n */\nResolverMethodHandler.prototype.handleSend = function (promiEvent, method, preparedArguments, sendOptions, callback) {\n    method.apply(this, preparedArguments).send(sendOptions)\n        .on('sending', function () {\n        promiEvent.eventEmitter.emit('sending');\n    })\n        .on('sent', function () {\n        promiEvent.eventEmitter.emit('sent');\n    })\n        .on('transactionHash', function (hash) {\n        promiEvent.eventEmitter.emit('transactionHash', hash);\n    })\n        .on('confirmation', function (confirmationNumber, receipt) {\n        promiEvent.eventEmitter.emit('confirmation', confirmationNumber, receipt);\n    })\n        .on('receipt', function (receipt) {\n        promiEvent.eventEmitter.emit('receipt', receipt);\n        promiEvent.resolve(receipt);\n        if (typeof callback === 'function') {\n            // It's required to pass the receipt to the second argument to be backwards compatible and to have the required consistency\n            callback(receipt, receipt);\n        }\n    })\n        .on('error', function (error) {\n        promiEvent.eventEmitter.emit('error', error);\n        if (typeof callback === 'function') {\n            callback(error, null);\n            return;\n        }\n        promiEvent.reject(error);\n    });\n    return promiEvent;\n};\n/**\n * Adds the ENS node to the arguments\n *\n * @param {string} name\n * @param {array} methodArguments\n *\n * @returns {array}\n */\nResolverMethodHandler.prototype.prepareArguments = function (name, methodArguments) {\n    var node = namehash.hash(name);\n    if (methodArguments.length > 0) {\n        methodArguments.unshift(node);\n        return methodArguments;\n    }\n    return [node];\n};\n/**\n *\n *\n * @param {Contract} resolver\n * @param {string} methodName\n *\n * @returns {Promise}\n */\nResolverMethodHandler.prototype.checkInterfaceSupport = async function (resolver, methodName) {\n    // Skip validation for undocumented interface ids (ex: multihash)\n    if (!interfaceIds[methodName])\n        return;\n    var supported = false;\n    try {\n        supported = await resolver\n            .methods\n            .supportsInterface(interfaceIds[methodName])\n            .call();\n    }\n    catch (err) {\n        console.warn('Could not verify interface of resolver contract at \"' + resolver.options.address + '\". ');\n    }\n    if (!supported) {\n        throw errors.ResolverMethodMissingError(resolver.options.address, methodName);\n    }\n};\nmodule.exports = ResolverMethodHandler;\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;+CAlBA,oJ;;AAmBA,IAAIA,UAAU,GAAGC,OAAO,CAAC,sBAAD,CAAxB;;AACA,IAAIC,QAAQ,GAAGD,OAAO,CAAC,kBAAD,CAAtB;;AACA,IAAIE,MAAM,GAAGF,OAAO,CAAC,mBAAD,CAAP,CAA6BE,MAA1C;;AACA,IAAIC,YAAY,GAAGH,OAAO,CAAC,WAAD,CAAP,CAAqBG,YAAxC;AACA;AACA;AACA;AACA;;;AACA,SAASC,qBAAT,CAA+BC,QAA/B,EAAyC;EACrC,KAAKA,QAAL,GAAgBA,QAAhB;AACH;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACAD,qBAAqB,CAACE,SAAtB,CAAgCC,MAAhC,GAAyC,UAAUC,OAAV,EAAmBC,UAAnB,EAA+BC,eAA/B,EAAgDC,eAAhD,EAAiEC,QAAjE,EAA2E;EAChH,OAAO;IACHC,IAAI,EAAE,KAAKA,IAAL,CAAUC,IAAV,CAAe;MACjBN,OAAO,EAAEA,OADQ;MAEjBC,UAAU,EAAEA,UAFK;MAGjBC,eAAe,EAAEA,eAHA;MAIjBE,QAAQ,EAAEA,QAJO;MAKjBG,MAAM,EAAE,IALS;MAMjBJ,eAAe,EAAEA;IANA,CAAf,CADH;IASHK,IAAI,EAAE,KAAKA,IAAL,CAAUF,IAAV,CAAe;MACjBN,OAAO,EAAEA,OADQ;MAEjBC,UAAU,EAAEA,UAFK;MAGjBC,eAAe,EAAEA,eAHA;MAIjBE,QAAQ,EAAEA,QAJO;MAKjBG,MAAM,EAAE;IALS,CAAf;EATH,CAAP;AAiBH,CAlBD;AAmBA;AACA;AACA;AACA;AACA;;;AACAX,qBAAqB,CAACE,SAAtB,CAAgCO,IAAhC,GAAuC,UAAUD,QAAV,EAAoB;EACvD,IAAIK,IAAI,GAAG,IAAX;EACA,IAAIC,UAAU,GAAG,IAAInB,UAAJ,EAAjB;EACA,IAAIoB,iBAAiB,GAAG,KAAKJ,MAAL,CAAYK,gBAAZ,CAA6B,KAAKZ,OAAlC,EAA2C,KAAKE,eAAhD,CAAxB;EACA,IAAIC,eAAe,GAAG,KAAKA,eAAL,IAAwB,IAA9C;EACA,KAAKI,MAAL,CAAYV,QAAZ,CAAqBgB,WAArB,CAAiC,KAAKb,OAAtC,EAA+Cc,IAA/C;IAAA,sEAAoD,iBAAgBC,QAAhB;MAAA;QAAA;UAAA;YAAA;cAAA;cAAA,OAC1CN,IAAI,CAACF,MAAL,CAAYS,qBAAZ,CAAkCD,QAAlC,EAA4CN,IAAI,CAACR,UAAjD,CAD0C;;YAAA;cAEhDQ,IAAI,CAACF,MAAL,CAAYU,UAAZ,CAAuBP,UAAvB,EAAmCK,QAAQ,CAACG,OAAT,CAAiBT,IAAI,CAACR,UAAtB,CAAnC,EAAsEU,iBAAtE,EAAyFR,eAAzF,EAA0GC,QAA1G;;YAFgD;YAAA;cAAA;UAAA;QAAA;MAAA;IAAA,CAApD;;IAAA;MAAA;IAAA;EAAA,KAGGe,KAHH,CAGS,UAAUC,KAAV,EAAiB;IACtB,IAAI,OAAOhB,QAAP,KAAoB,UAAxB,EAAoC;MAChCA,QAAQ,CAACgB,KAAD,EAAQ,IAAR,CAAR;MACA;IACH;;IACDV,UAAU,CAACW,MAAX,CAAkBD,KAAlB;EACH,CATD;EAUA,OAAOV,UAAU,CAACY,YAAlB;AACH,CAhBD;AAiBA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA1B,qBAAqB,CAACE,SAAtB,CAAgCU,IAAhC,GAAuC,UAAUe,WAAV,EAAuBnB,QAAvB,EAAiC;EACpE,IAAIK,IAAI,GAAG,IAAX;EACA,IAAIC,UAAU,GAAG,IAAInB,UAAJ,EAAjB;EACA,IAAIoB,iBAAiB,GAAG,KAAKJ,MAAL,CAAYK,gBAAZ,CAA6B,KAAKZ,OAAlC,EAA2C,KAAKE,eAAhD,CAAxB;EACA,KAAKK,MAAL,CAAYV,QAAZ,CAAqBgB,WAArB,CAAiC,KAAKb,OAAtC,EAA+Cc,IAA/C;IAAA,uEAAoD,kBAAgBC,QAAhB;MAAA;QAAA;UAAA;YAAA;cAAA;cAAA,OAC1CN,IAAI,CAACF,MAAL,CAAYS,qBAAZ,CAAkCD,QAAlC,EAA4CN,IAAI,CAACR,UAAjD,CAD0C;;YAAA;cAEhDQ,IAAI,CAACF,MAAL,CAAYiB,UAAZ,CAAuBd,UAAvB,EAAmCK,QAAQ,CAACG,OAAT,CAAiBT,IAAI,CAACR,UAAtB,CAAnC,EAAsEU,iBAAtE,EAAyFY,WAAzF,EAAsGnB,QAAtG;;YAFgD;YAAA;cAAA;UAAA;QAAA;MAAA;IAAA,CAApD;;IAAA;MAAA;IAAA;EAAA,KAGGe,KAHH,CAGS,UAAUC,KAAV,EAAiB;IACtB,IAAI,OAAOhB,QAAP,KAAoB,UAAxB,EAAoC;MAChCA,QAAQ,CAACgB,KAAD,EAAQ,IAAR,CAAR;MACA;IACH;;IACDV,UAAU,CAACW,MAAX,CAAkBD,KAAlB;EACH,CATD;EAUA,OAAOV,UAAU,CAACY,YAAlB;AACH,CAfD;AAgBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA1B,qBAAqB,CAACE,SAAtB,CAAgCmB,UAAhC,GAA6C,UAAUP,UAAV,EAAsBX,MAAtB,EAA8BY,iBAA9B,EAAiDR,eAAjD,EAAkEC,QAAlE,EAA4E;EACrHL,MAAM,CAAC0B,KAAP,CAAa,IAAb,EAAmBd,iBAAnB,EAAsCN,IAAtC,GACKS,IADL,CACU,UAAUY,MAAV,EAAkB;IACxB,IAAIvB,eAAJ,EAAqB;MACjBuB,MAAM,GAAGvB,eAAe,CAACuB,MAAD,CAAxB;IACH;;IACD,IAAI,OAAOtB,QAAP,KAAoB,UAAxB,EAAoC;MAChC;MACAA,QAAQ,CAACsB,MAAD,EAASA,MAAT,CAAR;MACA;IACH;;IACDhB,UAAU,CAACiB,OAAX,CAAmBD,MAAnB;EACH,CAXD,EAWGP,KAXH,CAWS,UAAUC,KAAV,EAAiB;IACtB,IAAI,OAAOhB,QAAP,KAAoB,UAAxB,EAAoC;MAChCA,QAAQ,CAACgB,KAAD,EAAQ,IAAR,CAAR;MACA;IACH;;IACDV,UAAU,CAACW,MAAX,CAAkBD,KAAlB;EACH,CAjBD;EAkBA,OAAOV,UAAP;AACH,CApBD;AAqBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACAd,qBAAqB,CAACE,SAAtB,CAAgC0B,UAAhC,GAA6C,UAAUd,UAAV,EAAsBX,MAAtB,EAA8BY,iBAA9B,EAAiDY,WAAjD,EAA8DnB,QAA9D,EAAwE;EACjHL,MAAM,CAAC0B,KAAP,CAAa,IAAb,EAAmBd,iBAAnB,EAAsCH,IAAtC,CAA2Ce,WAA3C,EACKK,EADL,CACQ,SADR,EACmB,YAAY;IAC3BlB,UAAU,CAACY,YAAX,CAAwBO,IAAxB,CAA6B,SAA7B;EACH,CAHD,EAIKD,EAJL,CAIQ,MAJR,EAIgB,YAAY;IACxBlB,UAAU,CAACY,YAAX,CAAwBO,IAAxB,CAA6B,MAA7B;EACH,CAND,EAOKD,EAPL,CAOQ,iBAPR,EAO2B,UAAUE,IAAV,EAAgB;IACvCpB,UAAU,CAACY,YAAX,CAAwBO,IAAxB,CAA6B,iBAA7B,EAAgDC,IAAhD;EACH,CATD,EAUKF,EAVL,CAUQ,cAVR,EAUwB,UAAUG,kBAAV,EAA8BC,OAA9B,EAAuC;IAC3DtB,UAAU,CAACY,YAAX,CAAwBO,IAAxB,CAA6B,cAA7B,EAA6CE,kBAA7C,EAAiEC,OAAjE;EACH,CAZD,EAaKJ,EAbL,CAaQ,SAbR,EAamB,UAAUI,OAAV,EAAmB;IAClCtB,UAAU,CAACY,YAAX,CAAwBO,IAAxB,CAA6B,SAA7B,EAAwCG,OAAxC;IACAtB,UAAU,CAACiB,OAAX,CAAmBK,OAAnB;;IACA,IAAI,OAAO5B,QAAP,KAAoB,UAAxB,EAAoC;MAChC;MACAA,QAAQ,CAAC4B,OAAD,EAAUA,OAAV,CAAR;IACH;EACJ,CApBD,EAqBKJ,EArBL,CAqBQ,OArBR,EAqBiB,UAAUR,KAAV,EAAiB;IAC9BV,UAAU,CAACY,YAAX,CAAwBO,IAAxB,CAA6B,OAA7B,EAAsCT,KAAtC;;IACA,IAAI,OAAOhB,QAAP,KAAoB,UAAxB,EAAoC;MAChCA,QAAQ,CAACgB,KAAD,EAAQ,IAAR,CAAR;MACA;IACH;;IACDV,UAAU,CAACW,MAAX,CAAkBD,KAAlB;EACH,CA5BD;EA6BA,OAAOV,UAAP;AACH,CA/BD;AAgCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACAd,qBAAqB,CAACE,SAAtB,CAAgCc,gBAAhC,GAAmD,UAAUqB,IAAV,EAAgB/B,eAAhB,EAAiC;EAChF,IAAIgC,IAAI,GAAGzC,QAAQ,CAACqC,IAAT,CAAcG,IAAd,CAAX;;EACA,IAAI/B,eAAe,CAACiC,MAAhB,GAAyB,CAA7B,EAAgC;IAC5BjC,eAAe,CAACkC,OAAhB,CAAwBF,IAAxB;IACA,OAAOhC,eAAP;EACH;;EACD,OAAO,CAACgC,IAAD,CAAP;AACH,CAPD;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACAtC,qBAAqB,CAACE,SAAtB,CAAgCkB,qBAAhC;EAAA,uEAAwD,kBAAgBD,QAAhB,EAA0Bd,UAA1B;IAAA;IAAA;MAAA;QAAA;UAAA;YAAA,IAE/CN,YAAY,CAACM,UAAD,CAFmC;cAAA;cAAA;YAAA;;YAAA;;UAAA;YAIhDoC,SAJgD,GAIpC,KAJoC;YAAA;YAAA;YAAA,OAM9BtB,QAAQ,CACrBG,OADa,CAEboB,iBAFa,CAEK3C,YAAY,CAACM,UAAD,CAFjB,EAGbI,IAHa,EAN8B;;UAAA;YAMhDgC,SANgD;YAAA;YAAA;;UAAA;YAAA;YAAA;YAYhDE,OAAO,CAACC,IAAR,CAAa,yDAAyDzB,QAAQ,CAAC0B,OAAT,CAAiBC,OAA1E,GAAoF,KAAjG;;UAZgD;YAAA,IAc/CL,SAd+C;cAAA;cAAA;YAAA;;YAAA,MAe1C3C,MAAM,CAACiD,0BAAP,CAAkC5B,QAAQ,CAAC0B,OAAT,CAAiBC,OAAnD,EAA4DzC,UAA5D,CAf0C;;UAAA;UAAA;YAAA;QAAA;MAAA;IAAA;EAAA,CAAxD;;EAAA;IAAA;EAAA;AAAA;;AAkBA2C,MAAM,CAACC,OAAP,GAAiBjD,qBAAjB"},"metadata":{},"sourceType":"script"}