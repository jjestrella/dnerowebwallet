{"ast":null,"code":"import _classCallCheck from\"/Users/jjestrella/DNERO_Protocol/dnerowebwallet/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/jjestrella/DNERO_Protocol/dnerowebwallet/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _assertThisInitialized from\"/Users/jjestrella/DNERO_Protocol/dnerowebwallet/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";import _inherits from\"/Users/jjestrella/DNERO_Protocol/dnerowebwallet/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/jjestrella/DNERO_Protocol/dnerowebwallet/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import _ from'lodash';import React from\"react\";import'./WalletPage.css';import{connect}from'react-redux';import WalletTokenList from'../components/WalletTokenList';import PageHeader from'../components/PageHeader';import TransactionList from'../components/TransactionList';import{fetchWalletBalances}from\"../state/actions/Wallet\";import{fetchDneroTransactions}from\"../state/actions/Transactions\";import{getERC20Transactions,getEthereumTransactions,getDneroNetworkTransactions}from\"../state/selectors/Transactions\";import EmptyState from\"../components/EmptyState\";import TokenTypes from\"../constants/TokenTypes\";import MDSpinner from\"react-md-spinner\";import GhostButton from\"../components/buttons/GhostButton\";import{showModal}from\"../state/actions/ui\";import ModalTypes from\"../constants/ModalTypes\";import{DefaultAssets,getAllAssets,tokenToAsset}from\"../constants/assets\";import Dnero from\"../services/Dnero\";export var WalletPage=/*#__PURE__*/function(_React$Component){_inherits(WalletPage,_React$Component);var _super=_createSuper(WalletPage);function WalletPage(){var _this;_classCallCheck(this,WalletPage);_this=_super.call(this);_this.pollWalletBalancesIntervalId=null;// this.fetchBalances = this.fetchBalances.bind(this);\n_this.handleSendClick=_this.handleSendClick.bind(_assertThisInitialized(_this));_this.handleReceiveClick=_this.handleReceiveClick.bind(_assertThisInitialized(_this));return _this;}_createClass(WalletPage,[{key:\"fetchTransactions\",value:function fetchTransactions(tokenType){if(tokenType===TokenTypes.DNERO||tokenType===TokenTypes.DNERO_TOKEN){this.props.dispatch(fetchDneroTransactions());}}},{key:\"fetchBalances\",value:function fetchBalances(){// this.props.dispatch(fetchWalletBalances());\n}},{key:\"startPollingWalletBalances\",value:function startPollingWalletBalances(){//Fetch it immediately\n// this.fetchBalances();\n// this.pollWalletBalancesIntervalId = setInterval(this.fetchBalances, 15000);\n}},{key:\"stopPollingWalletBalances\",value:function stopPollingWalletBalances(){// if(this.pollWalletBalancesIntervalId){\n//     clearInterval(this.pollWalletBalancesIntervalId);\n// }\n}},{key:\"handleSendClick\",value:function handleSendClick(){this.props.dispatch(showModal({type:ModalTypes.CREATE_TRANSACTION,props:{transactionType:'send'}}));}},{key:\"handleReceiveClick\",value:function handleReceiveClick(){this.props.dispatch(showModal({type:ModalTypes.RECEIVE}));}},{key:\"componentDidMount\",value:function componentDidMount(){var tokenType=this.props.match.params.tokenType;// this.startPollingWalletBalances();\nthis.fetchTransactions(tokenType);}},{key:\"componentWillUnmount\",value:function componentWillUnmount(){// this.stopPollingWalletBalances();\n}},{key:\"componentWillReceiveProps\",value:function componentWillReceiveProps(nextProps){var nextTokenType=nextProps.match.params.tokenType;if(this.props.match.params.tokenType!==nextTokenType){this.fetchTransactions(nextTokenType);}}},{key:\"render\",value:function render(){var _this$props=this.props,selectedAccount=_this$props.selectedAccount,assets=_this$props.assets,tokens=_this$props.tokens,isFetchingBalances=_this$props.isFetchingBalances,balancesRefreshedAt=_this$props.balancesRefreshedAt,transactions=_this$props.transactions,isLoadingTransactions=_this$props.isLoadingTransactions;return/*#__PURE__*/React.createElement(\"div\",{className:\"WalletPage\"},/*#__PURE__*/React.createElement(\"div\",{className:\"WalletPage__master-view\"},isFetchingBalances&&_.isEmpty(selectedAccount)&&/*#__PURE__*/React.createElement(MDSpinner,{singleColor:\"#ffffff\",className:\"WalletPage__master-view-spinner\",size:20}),/*#__PURE__*/React.createElement(WalletTokenList,{selectedAccount:selectedAccount,tokens:tokens,assets:assets,balancesRefreshedAt:balancesRefreshedAt})),/*#__PURE__*/React.createElement(\"div\",{className:\"WalletPage__detail-view\"},/*#__PURE__*/React.createElement(PageHeader,{title:\"Dnero/Dtoken Transactions\",sticky:true},/*#__PURE__*/React.createElement(\"div\",{className:\"WalletPage__header-buttons\"},/*#__PURE__*/React.createElement(GhostButton,{title:\"Send\",iconUrl:\"/img/icons/send@2x.png\",onClick:this.handleSendClick}),/*#__PURE__*/React.createElement(GhostButton,{title:\"Receive\",iconUrl:\"/img/icons/receive@2x.png\",style:{marginLeft:12},onClick:this.handleReceiveClick}))),isLoadingTransactions&&/*#__PURE__*/React.createElement(MDSpinner,{singleColor:\"#ffffff\",className:\"WalletPage__detail-view-spinner\"}),/*#__PURE__*/React.createElement(\"a\",{href:Dnero.getAccountExplorerUrl(selectedAccount.address),target:\"_blank\",style:{marginTop:12,marginBottom:12}},\"View all transactions on explorer\"),transactions.length>0&&/*#__PURE__*/React.createElement(TransactionList,{transactions:transactions}),transactions.length===0&&isLoadingTransactions===false&&/*#__PURE__*/React.createElement(EmptyState,{icon:\"/img/icons/empty-transactions@2x.png\",title:\"No Transactions\"})));}}]);return WalletPage;}(React.Component);var mapStateToProps=function mapStateToProps(state,ownProps){var _dneroWallet$network;var dneroWallet=state.dneroWallet;var selectedAddress=dneroWallet.selectedAddress;var identities=dneroWallet.identities;var accounts=dneroWallet.accounts;var tokens=dneroWallet.tokens;var chainId=(_dneroWallet$network=dneroWallet.network)===null||_dneroWallet$network===void 0?void 0:_dneroWallet$network.chainId;var transactions=_.get(dneroWallet,['transactions',selectedAddress],[]);return{selectedAddress:selectedAddress,selectedIdentity:identities[selectedAddress],selectedAccount:accounts[selectedAddress],tokens:tokens,assets:getAllAssets(chainId,tokens),transactions:transactions};};export default connect(mapStateToProps)(WalletPage);","map":{"version":3,"names":["_","React","connect","WalletTokenList","PageHeader","TransactionList","fetchWalletBalances","fetchDneroTransactions","getERC20Transactions","getEthereumTransactions","getDneroNetworkTransactions","EmptyState","TokenTypes","MDSpinner","GhostButton","showModal","ModalTypes","DefaultAssets","getAllAssets","tokenToAsset","Dnero","WalletPage","pollWalletBalancesIntervalId","handleSendClick","bind","handleReceiveClick","tokenType","DNERO","DNERO_TOKEN","props","dispatch","type","CREATE_TRANSACTION","transactionType","RECEIVE","match","params","fetchTransactions","nextProps","nextTokenType","selectedAccount","assets","tokens","isFetchingBalances","balancesRefreshedAt","transactions","isLoadingTransactions","isEmpty","marginLeft","getAccountExplorerUrl","address","marginTop","marginBottom","length","Component","mapStateToProps","state","ownProps","dneroWallet","selectedAddress","identities","accounts","chainId","network","get","selectedIdentity"],"sources":["/Users/jjestrella/DNERO_Protocol/dnerowebwallet/src/pages/WalletPage.js"],"sourcesContent":["import _ from 'lodash';\nimport React from \"react\";\nimport './WalletPage.css';\nimport {connect} from 'react-redux'\nimport WalletTokenList from '../components/WalletTokenList'\nimport PageHeader from '../components/PageHeader'\nimport TransactionList from '../components/TransactionList'\nimport {fetchWalletBalances} from \"../state/actions/Wallet\";\nimport {fetchDneroTransactions} from \"../state/actions/Transactions\";\nimport {getERC20Transactions, getEthereumTransactions, getDneroNetworkTransactions} from \"../state/selectors/Transactions\";\nimport EmptyState from \"../components/EmptyState\";\nimport TokenTypes from \"../constants/TokenTypes\";\nimport MDSpinner from \"react-md-spinner\";\nimport GhostButton from \"../components/buttons/GhostButton\";\nimport {showModal} from \"../state/actions/ui\";\nimport ModalTypes from \"../constants/ModalTypes\";\nimport {DefaultAssets, getAllAssets, tokenToAsset} from \"../constants/assets\";\nimport Dnero from \"../services/Dnero\";\n\nexport class WalletPage extends React.Component {\n    constructor(){\n        super();\n\n        this.pollWalletBalancesIntervalId = null;\n\n        // this.fetchBalances = this.fetchBalances.bind(this);\n        this.handleSendClick = this.handleSendClick.bind(this);\n        this.handleReceiveClick = this.handleReceiveClick.bind(this);\n    }\n\n    fetchTransactions(tokenType){\n        if(tokenType === TokenTypes.DNERO || tokenType === TokenTypes.DNERO_TOKEN){\n            this.props.dispatch(fetchDneroTransactions());\n        }\n    }\n\n    fetchBalances(){\n        // this.props.dispatch(fetchWalletBalances());\n    }\n\n    startPollingWalletBalances(){\n        //Fetch it immediately\n        // this.fetchBalances();\n\n        // this.pollWalletBalancesIntervalId = setInterval(this.fetchBalances, 15000);\n    }\n\n    stopPollingWalletBalances(){\n        // if(this.pollWalletBalancesIntervalId){\n        //     clearInterval(this.pollWalletBalancesIntervalId);\n        // }\n    }\n\n    handleSendClick(){\n        this.props.dispatch(showModal({\n            type: ModalTypes.CREATE_TRANSACTION,\n            props: {\n                transactionType: 'send'\n            }\n        }));\n    }\n\n    handleReceiveClick(){\n        this.props.dispatch(showModal({\n            type: ModalTypes.RECEIVE,\n        }));\n    }\n\n    componentDidMount(){\n        let tokenType = this.props.match.params.tokenType;\n\n        // this.startPollingWalletBalances();\n        this.fetchTransactions(tokenType);\n    }\n\n    componentWillUnmount(){\n        // this.stopPollingWalletBalances();\n    }\n\n    componentWillReceiveProps(nextProps){\n        let nextTokenType = nextProps.match.params.tokenType;\n\n        if(this.props.match.params.tokenType !== nextTokenType){\n            this.fetchTransactions(nextTokenType);\n        }\n    }\n\n    render() {\n        const { selectedAccount, assets, tokens, isFetchingBalances, balancesRefreshedAt, transactions, isLoadingTransactions } = this.props;\n\n        return (\n            <div className=\"WalletPage\">\n                <div className=\"WalletPage__master-view\">\n                    {\n                        isFetchingBalances && _.isEmpty(selectedAccount) &&\n                        <MDSpinner singleColor=\"#ffffff\"\n                                   className=\"WalletPage__master-view-spinner\"\n                                   size={20}/>\n                    }\n\n                    <WalletTokenList selectedAccount={selectedAccount}\n                                     tokens={tokens}\n                                     assets={assets}\n                                     balancesRefreshedAt={balancesRefreshedAt}\n                    />\n                </div>\n                <div className=\"WalletPage__detail-view\">\n                    <PageHeader title=\"Dnero/Dtoken Transactions\"\n                                sticky={true}>\n                        <div className=\"WalletPage__header-buttons\">\n                            <GhostButton title=\"Send\"\n                                         iconUrl=\"/img/icons/send@2x.png\"\n                                         onClick={this.handleSendClick}/>\n                            <GhostButton title=\"Receive\"\n                                         iconUrl=\"/img/icons/receive@2x.png\"\n                                         style={{marginLeft: 12}}\n                                         onClick={this.handleReceiveClick}/>\n                        </div>\n                    </PageHeader>\n\n                    {\n                        isLoadingTransactions &&\n                        <MDSpinner singleColor=\"#ffffff\" className=\"WalletPage__detail-view-spinner\"/>\n                    }\n\n                    <a href={Dnero.getAccountExplorerUrl(selectedAccount.address)}\n                       target={\"_blank\"}\n                       style={{marginTop: 12, marginBottom: 12}}\n                    >View all transactions on explorer</a>\n                    {\n                        transactions.length > 0 &&\n                        <TransactionList transactions={transactions}/>\n                    }\n\n                    {\n                        (transactions.length === 0 && isLoadingTransactions === false) &&\n                        <EmptyState icon=\"/img/icons/empty-transactions@2x.png\"\n                                    title=\"No Transactions\"\n                        />\n                    }\n                </div>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n    const {dneroWallet} = state;\n    const selectedAddress = dneroWallet.selectedAddress;\n    const identities = dneroWallet.identities;\n    const accounts = dneroWallet.accounts;\n    const tokens = dneroWallet.tokens;\n    const chainId = dneroWallet.network?.chainId;\n    const transactions = _.get(dneroWallet, ['transactions', selectedAddress], []);\n\n    return {\n        selectedAddress: selectedAddress,\n        selectedIdentity: identities[selectedAddress],\n        selectedAccount: accounts[selectedAddress],\n\n        tokens: tokens,\n        assets: getAllAssets(chainId, tokens),\n\n        transactions: transactions,\n    }\n};\n\nexport default connect(mapStateToProps)(WalletPage);\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}