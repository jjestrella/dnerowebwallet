{"ast":null,"code":"import React from'react';import{useForm}from'react-hook-form';import{ethers}from'ethers';import _ from'lodash';import FormField from'../../components/FormField';import{isValidAmount,getAssetBalance,toNativeTokenLargestUnit,toDNC20TokenLargestUnit}from'../../utils/Utils';import{Urls}from'../../constants';import Warning from'../../components/Warning';import*as dnerojs from\"@dnerolabs/dnero-js\";import BigNumber from\"bignumber.js\";import{DTokenAsset,DneroAsset}from\"../../constants/assets\";import FlatButton from\"../buttons/FlatButton\";export default function SendTxForm(props){var onSubmit=props.onSubmit,defaultValues=props.defaultValues,selectedAccount=props.selectedAccount,formRef=props.formRef,assets=props.assets;var _useForm=useForm({mode:'onChange',defaultValues:defaultValues||{to:'',amount:'',assetId:''}}),register=_useForm.register,handleSubmit=_useForm.handleSubmit,errors=_useForm.errors,watch=_useForm.watch,setValue=_useForm.setValue;var assetId=watch('assetId');var populateMaxAmount=function populateMaxAmount(){if(_.isEmpty(assetId)){return;}var amount='';var asset=_.find(assets,function(a){return a.id===assetId;});if(assetId===DTokenAsset.id){var maxDtokenBN=new BigNumber(selectedAccount.balances['dtokenwei']).minus(dnerojs.constants.gasPriceDefault);amount=toNativeTokenLargestUnit(maxDtokenBN.toString(10)).toString(10);}else if(assetId===DneroAsset.id){amount=toNativeTokenLargestUnit(selectedAccount.balances['dnerowei']).toString(10);}else{var balance=selectedAccount.balances[asset.address]||'0';amount=toDNC20TokenLargestUnit(balance,asset.decimals).toString(10);}setValue('amount',amount);};return/*#__PURE__*/React.createElement(\"form\",{className:'TxForm TxForm--Send',onSubmit:handleSubmit(onSubmit),ref:formRef},/*#__PURE__*/React.createElement(FormField,{title:'To',error:errors.to&&'A valid address is required'},/*#__PURE__*/React.createElement(\"input\",{name:\"to\",className:'RoundedInput',placeholder:'Enter address',ref:register({required:true,validate:function validate(s){return ethers.utils.isAddress(s);}})})),/*#__PURE__*/React.createElement(FormField,{title:'Asset',error:errors.assetId&&'Asset is required'},/*#__PURE__*/React.createElement(\"select\",{className:'RoundedInput',name:'assetId',ref:register({required:true})},/*#__PURE__*/React.createElement(\"option\",{key:'__placeholder__',value:'',disabled:true},\"Select asset\"),assets.map(function(asset){return/*#__PURE__*/React.createElement(\"option\",{key:asset.symbol,value:asset.id},\"\".concat(asset.symbol,\" (\").concat(getAssetBalance(selectedAccount,asset),\")\"));}))),/*#__PURE__*/React.createElement(FormField,{title:'Amount',error:errors.amount&&errors.amount.message},/*#__PURE__*/React.createElement(\"div\",{className:'RoundedInputWrapper'},/*#__PURE__*/React.createElement(\"input\",{name:\"amount\",className:'RoundedInput',placeholder:'Enter amount',type:'number',ref:register({required:{value:true,message:'Amount is required'},validate:{sufficientBalance:function sufficientBalance(s){var asset=_.find(assets,function(a){return a.id===assetId;});var isValid=isValidAmount(selectedAccount,asset,s);return isValid?true:'Insufficient balance';},moreThanZero:function moreThanZero(s){var f=parseFloat(s);return f>0?true:'Invalid amount';}}})}),/*#__PURE__*/React.createElement(FlatButton,{title:'Max',size:'small',className:'RoundedInputButton',onClick:populateMaxAmount}))),/*#__PURE__*/React.createElement(Warning,{message:'Do not send to Ethereum/ERC20 addresses.',learnMoreHref:Urls.PreventingLostTokens,style:{maxWidth:'250px',marginBottom:10}}));}","map":{"version":3,"names":["React","useForm","ethers","_","FormField","isValidAmount","getAssetBalance","toNativeTokenLargestUnit","toDNC20TokenLargestUnit","Urls","Warning","dnerojs","BigNumber","DTokenAsset","DneroAsset","FlatButton","SendTxForm","props","onSubmit","defaultValues","selectedAccount","formRef","assets","mode","to","amount","assetId","register","handleSubmit","errors","watch","setValue","populateMaxAmount","isEmpty","asset","find","a","id","maxDtokenBN","balances","minus","constants","gasPriceDefault","toString","balance","address","decimals","required","validate","s","utils","isAddress","map","symbol","message","value","sufficientBalance","isValid","moreThanZero","f","parseFloat","PreventingLostTokens","maxWidth","marginBottom"],"sources":["/Users/jjestrella/DNERO_Protocol/dnerowebwallet/src/components/transactions/SendTxForm.js"],"sourcesContent":["import React from 'react';\nimport { useForm } from 'react-hook-form';\nimport { ethers } from 'ethers';\nimport _ from 'lodash';\nimport FormField from '../../components/FormField';\nimport {\n    isValidAmount, getAssetBalance, toNativeTokenLargestUnit, toDNC20TokenLargestUnit\n} from '../../utils/Utils';\nimport {Urls} from '../../constants';\nimport Warning from '../../components/Warning';\nimport * as dnerojs from \"@dnerolabs/dnero-js\";\nimport BigNumber from \"bignumber.js\";\nimport {DTokenAsset, DneroAsset} from \"../../constants/assets\";\nimport FlatButton from \"../buttons/FlatButton\";\n\nexport default function SendTxForm(props){\n    const {onSubmit, defaultValues, selectedAccount, formRef, assets} = props;\n    const {register, handleSubmit, errors, watch, setValue} = useForm({\n        mode: 'onChange',\n        defaultValues: defaultValues || {\n            to: '',\n            amount: '',\n            assetId: ''\n        }\n    });\n    const assetId = watch('assetId');\n    const populateMaxAmount = () => {\n        if(_.isEmpty(assetId)){\n            return;\n        }\n\n        let amount = '';\n        const asset = _.find(assets, function (a) {\n            return a.id === assetId;\n        });\n\n        if(assetId === DTokenAsset.id){\n            const maxDtokenBN = (new BigNumber(selectedAccount.balances['dtokenwei'])).minus(dnerojs.constants.gasPriceDefault);\n            amount = toNativeTokenLargestUnit(maxDtokenBN.toString(10)).toString(10);\n        }\n        else if (assetId === DneroAsset.id){\n            amount = toNativeTokenLargestUnit(selectedAccount.balances['dnerowei']).toString(10);\n        }\n        else{\n            const balance = selectedAccount.balances[asset.address] || '0';\n            amount = toDNC20TokenLargestUnit(balance, asset.decimals).toString(10);\n        }\n\n        setValue('amount', amount);\n    }\n\n    return (\n        <form className={'TxForm TxForm--Send'}\n              onSubmit={handleSubmit(onSubmit)}\n              ref={formRef}\n        >\n            <FormField title={'To'}\n                       error={(errors.to && 'A valid address is required')}\n            >\n                <input name=\"to\"\n                       className={'RoundedInput'}\n                       placeholder={'Enter address'}\n                       ref={register({\n                           required: true,\n                           validate: (s) => ethers.utils.isAddress(s)\n                       })} />\n            </FormField>\n\n            <FormField title={'Asset'}\n                       error={errors.assetId && 'Asset is required'}\n            >\n                <select\n                    className={'RoundedInput'}\n                    name={'assetId'}\n                    ref={register({ required: true })}\n                >\n                    <option key={'__placeholder__'}\n                            value={''}\n                            disabled>\n                        Select asset\n                    </option>\n                    {\n                        assets.map((asset) => (\n                            <option key={asset.symbol}\n                                    value={asset.id}>\n                                {`${asset.symbol} (${getAssetBalance(selectedAccount, asset)})`}\n                            </option>\n                        ))\n                    }\n                </select>\n            </FormField>\n\n            <FormField title={'Amount'}\n                       error={errors.amount && errors.amount.message}\n            >\n                <div className={'RoundedInputWrapper'}>\n                    <input name=\"amount\"\n                           className={'RoundedInput'}\n                           placeholder={'Enter amount'}\n                           type={'number'}\n                           ref={register({\n                               required: {\n                                   value: true,\n                                   message: 'Amount is required'\n                               },\n                               validate: {\n                                   sufficientBalance: (s) => {\n                                       const asset = _.find(assets, function (a) {\n                                           return a.id === assetId;\n                                       });\n                                       const isValid = isValidAmount(selectedAccount, asset, s);\n\n                                       return isValid ? true : 'Insufficient balance';\n                                   },\n                                   moreThanZero: (s) => {\n                                       const f = parseFloat(s);\n\n                                       return (f > 0) ? true : 'Invalid amount';\n                                   }\n                               }})} />\n                    <FlatButton title={'Max'}\n                                size={'small'}\n                                className={'RoundedInputButton'}\n                                onClick={populateMaxAmount}/>\n                </div>\n            </FormField>\n\n            <Warning message={'Do not send to Ethereum/ERC20 addresses.'}\n                     learnMoreHref={Urls.PreventingLostTokens}\n                     style={{\n                         maxWidth: '250px',\n                         marginBottom: 10\n                     }}\n            />\n\n        </form>\n    );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}