{"ast":null,"code":"import _toConsumableArray from\"/Users/jjestrella/DNERO_Protocol/dnerowebwallet/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _objectDestructuringEmpty from\"/Users/jjestrella/DNERO_Protocol/dnerowebwallet/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectDestructuringEmpty\";import _asyncToGenerator from\"/Users/jjestrella/DNERO_Protocol/dnerowebwallet/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _objectSpread from\"/Users/jjestrella/DNERO_Protocol/dnerowebwallet/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _classCallCheck from\"/Users/jjestrella/DNERO_Protocol/dnerowebwallet/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/jjestrella/DNERO_Protocol/dnerowebwallet/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _assertThisInitialized from\"/Users/jjestrella/DNERO_Protocol/dnerowebwallet/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";import _inherits from\"/Users/jjestrella/DNERO_Protocol/dnerowebwallet/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/jjestrella/DNERO_Protocol/dnerowebwallet/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";function _regeneratorRuntime(){\"use strict\";/*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */_regeneratorRuntime=function _regeneratorRuntime(){return exports;};var exports={},Op=Object.prototype,hasOwn=Op.hasOwnProperty,$Symbol=\"function\"==typeof Symbol?Symbol:{},iteratorSymbol=$Symbol.iterator||\"@@iterator\",asyncIteratorSymbol=$Symbol.asyncIterator||\"@@asyncIterator\",toStringTagSymbol=$Symbol.toStringTag||\"@@toStringTag\";function define(obj,key,value){return Object.defineProperty(obj,key,{value:value,enumerable:!0,configurable:!0,writable:!0}),obj[key];}try{define({},\"\");}catch(err){define=function define(obj,key,value){return obj[key]=value;};}function wrap(innerFn,outerFn,self,tryLocsList){var protoGenerator=outerFn&&outerFn.prototype instanceof Generator?outerFn:Generator,generator=Object.create(protoGenerator.prototype),context=new Context(tryLocsList||[]);return generator._invoke=function(innerFn,self,context){var state=\"suspendedStart\";return function(method,arg){if(\"executing\"===state)throw new Error(\"Generator is already running\");if(\"completed\"===state){if(\"throw\"===method)throw arg;return doneResult();}for(context.method=method,context.arg=arg;;){var delegate=context.delegate;if(delegate){var delegateResult=maybeInvokeDelegate(delegate,context);if(delegateResult){if(delegateResult===ContinueSentinel)continue;return delegateResult;}}if(\"next\"===context.method)context.sent=context._sent=context.arg;else if(\"throw\"===context.method){if(\"suspendedStart\"===state)throw state=\"completed\",context.arg;context.dispatchException(context.arg);}else\"return\"===context.method&&context.abrupt(\"return\",context.arg);state=\"executing\";var record=tryCatch(innerFn,self,context);if(\"normal\"===record.type){if(state=context.done?\"completed\":\"suspendedYield\",record.arg===ContinueSentinel)continue;return{value:record.arg,done:context.done};}\"throw\"===record.type&&(state=\"completed\",context.method=\"throw\",context.arg=record.arg);}};}(innerFn,self,context),generator;}function tryCatch(fn,obj,arg){try{return{type:\"normal\",arg:fn.call(obj,arg)};}catch(err){return{type:\"throw\",arg:err};}}exports.wrap=wrap;var ContinueSentinel={};function Generator(){}function GeneratorFunction(){}function GeneratorFunctionPrototype(){}var IteratorPrototype={};define(IteratorPrototype,iteratorSymbol,function(){return this;});var getProto=Object.getPrototypeOf,NativeIteratorPrototype=getProto&&getProto(getProto(values([])));NativeIteratorPrototype&&NativeIteratorPrototype!==Op&&hasOwn.call(NativeIteratorPrototype,iteratorSymbol)&&(IteratorPrototype=NativeIteratorPrototype);var Gp=GeneratorFunctionPrototype.prototype=Generator.prototype=Object.create(IteratorPrototype);function defineIteratorMethods(prototype){[\"next\",\"throw\",\"return\"].forEach(function(method){define(prototype,method,function(arg){return this._invoke(method,arg);});});}function AsyncIterator(generator,PromiseImpl){function invoke(method,arg,resolve,reject){var record=tryCatch(generator[method],generator,arg);if(\"throw\"!==record.type){var result=record.arg,value=result.value;return value&&\"object\"==typeof value&&hasOwn.call(value,\"__await\")?PromiseImpl.resolve(value.__await).then(function(value){invoke(\"next\",value,resolve,reject);},function(err){invoke(\"throw\",err,resolve,reject);}):PromiseImpl.resolve(value).then(function(unwrapped){result.value=unwrapped,resolve(result);},function(error){return invoke(\"throw\",error,resolve,reject);});}reject(record.arg);}var previousPromise;this._invoke=function(method,arg){function callInvokeWithMethodAndArg(){return new PromiseImpl(function(resolve,reject){invoke(method,arg,resolve,reject);});}return previousPromise=previousPromise?previousPromise.then(callInvokeWithMethodAndArg,callInvokeWithMethodAndArg):callInvokeWithMethodAndArg();};}function maybeInvokeDelegate(delegate,context){var method=delegate.iterator[context.method];if(undefined===method){if(context.delegate=null,\"throw\"===context.method){if(delegate.iterator.return&&(context.method=\"return\",context.arg=undefined,maybeInvokeDelegate(delegate,context),\"throw\"===context.method))return ContinueSentinel;context.method=\"throw\",context.arg=new TypeError(\"The iterator does not provide a 'throw' method\");}return ContinueSentinel;}var record=tryCatch(method,delegate.iterator,context.arg);if(\"throw\"===record.type)return context.method=\"throw\",context.arg=record.arg,context.delegate=null,ContinueSentinel;var info=record.arg;return info?info.done?(context[delegate.resultName]=info.value,context.next=delegate.nextLoc,\"return\"!==context.method&&(context.method=\"next\",context.arg=undefined),context.delegate=null,ContinueSentinel):info:(context.method=\"throw\",context.arg=new TypeError(\"iterator result is not an object\"),context.delegate=null,ContinueSentinel);}function pushTryEntry(locs){var entry={tryLoc:locs[0]};1 in locs&&(entry.catchLoc=locs[1]),2 in locs&&(entry.finallyLoc=locs[2],entry.afterLoc=locs[3]),this.tryEntries.push(entry);}function resetTryEntry(entry){var record=entry.completion||{};record.type=\"normal\",delete record.arg,entry.completion=record;}function Context(tryLocsList){this.tryEntries=[{tryLoc:\"root\"}],tryLocsList.forEach(pushTryEntry,this),this.reset(!0);}function values(iterable){if(iterable){var iteratorMethod=iterable[iteratorSymbol];if(iteratorMethod)return iteratorMethod.call(iterable);if(\"function\"==typeof iterable.next)return iterable;if(!isNaN(iterable.length)){var i=-1,next=function next(){for(;++i<iterable.length;){if(hasOwn.call(iterable,i))return next.value=iterable[i],next.done=!1,next;}return next.value=undefined,next.done=!0,next;};return next.next=next;}}return{next:doneResult};}function doneResult(){return{value:undefined,done:!0};}return GeneratorFunction.prototype=GeneratorFunctionPrototype,define(Gp,\"constructor\",GeneratorFunctionPrototype),define(GeneratorFunctionPrototype,\"constructor\",GeneratorFunction),GeneratorFunction.displayName=define(GeneratorFunctionPrototype,toStringTagSymbol,\"GeneratorFunction\"),exports.isGeneratorFunction=function(genFun){var ctor=\"function\"==typeof genFun&&genFun.constructor;return!!ctor&&(ctor===GeneratorFunction||\"GeneratorFunction\"===(ctor.displayName||ctor.name));},exports.mark=function(genFun){return Object.setPrototypeOf?Object.setPrototypeOf(genFun,GeneratorFunctionPrototype):(genFun.__proto__=GeneratorFunctionPrototype,define(genFun,toStringTagSymbol,\"GeneratorFunction\")),genFun.prototype=Object.create(Gp),genFun;},exports.awrap=function(arg){return{__await:arg};},defineIteratorMethods(AsyncIterator.prototype),define(AsyncIterator.prototype,asyncIteratorSymbol,function(){return this;}),exports.AsyncIterator=AsyncIterator,exports.async=function(innerFn,outerFn,self,tryLocsList,PromiseImpl){void 0===PromiseImpl&&(PromiseImpl=Promise);var iter=new AsyncIterator(wrap(innerFn,outerFn,self,tryLocsList),PromiseImpl);return exports.isGeneratorFunction(outerFn)?iter:iter.next().then(function(result){return result.done?result.value:iter.next();});},defineIteratorMethods(Gp),define(Gp,toStringTagSymbol,\"Generator\"),define(Gp,iteratorSymbol,function(){return this;}),define(Gp,\"toString\",function(){return\"[object Generator]\";}),exports.keys=function(object){var keys=[];for(var key in object){keys.push(key);}return keys.reverse(),function next(){for(;keys.length;){var key=keys.pop();if(key in object)return next.value=key,next.done=!1,next;}return next.done=!0,next;};},exports.values=values,Context.prototype={constructor:Context,reset:function reset(skipTempReset){if(this.prev=0,this.next=0,this.sent=this._sent=undefined,this.done=!1,this.delegate=null,this.method=\"next\",this.arg=undefined,this.tryEntries.forEach(resetTryEntry),!skipTempReset)for(var name in this){\"t\"===name.charAt(0)&&hasOwn.call(this,name)&&!isNaN(+name.slice(1))&&(this[name]=undefined);}},stop:function stop(){this.done=!0;var rootRecord=this.tryEntries[0].completion;if(\"throw\"===rootRecord.type)throw rootRecord.arg;return this.rval;},dispatchException:function dispatchException(exception){if(this.done)throw exception;var context=this;function handle(loc,caught){return record.type=\"throw\",record.arg=exception,context.next=loc,caught&&(context.method=\"next\",context.arg=undefined),!!caught;}for(var i=this.tryEntries.length-1;i>=0;--i){var entry=this.tryEntries[i],record=entry.completion;if(\"root\"===entry.tryLoc)return handle(\"end\");if(entry.tryLoc<=this.prev){var hasCatch=hasOwn.call(entry,\"catchLoc\"),hasFinally=hasOwn.call(entry,\"finallyLoc\");if(hasCatch&&hasFinally){if(this.prev<entry.catchLoc)return handle(entry.catchLoc,!0);if(this.prev<entry.finallyLoc)return handle(entry.finallyLoc);}else if(hasCatch){if(this.prev<entry.catchLoc)return handle(entry.catchLoc,!0);}else{if(!hasFinally)throw new Error(\"try statement without catch or finally\");if(this.prev<entry.finallyLoc)return handle(entry.finallyLoc);}}}},abrupt:function abrupt(type,arg){for(var i=this.tryEntries.length-1;i>=0;--i){var entry=this.tryEntries[i];if(entry.tryLoc<=this.prev&&hasOwn.call(entry,\"finallyLoc\")&&this.prev<entry.finallyLoc){var finallyEntry=entry;break;}}finallyEntry&&(\"break\"===type||\"continue\"===type)&&finallyEntry.tryLoc<=arg&&arg<=finallyEntry.finallyLoc&&(finallyEntry=null);var record=finallyEntry?finallyEntry.completion:{};return record.type=type,record.arg=arg,finallyEntry?(this.method=\"next\",this.next=finallyEntry.finallyLoc,ContinueSentinel):this.complete(record);},complete:function complete(record,afterLoc){if(\"throw\"===record.type)throw record.arg;return\"break\"===record.type||\"continue\"===record.type?this.next=record.arg:\"return\"===record.type?(this.rval=this.arg=record.arg,this.method=\"return\",this.next=\"end\"):\"normal\"===record.type&&afterLoc&&(this.next=afterLoc),ContinueSentinel;},finish:function finish(finallyLoc){for(var i=this.tryEntries.length-1;i>=0;--i){var entry=this.tryEntries[i];if(entry.finallyLoc===finallyLoc)return this.complete(entry.completion,entry.afterLoc),resetTryEntry(entry),ContinueSentinel;}},catch:function _catch(tryLoc){for(var i=this.tryEntries.length-1;i>=0;--i){var entry=this.tryEntries[i];if(entry.tryLoc===tryLoc){var record=entry.completion;if(\"throw\"===record.type){var thrown=record.arg;resetTryEntry(entry);}return thrown;}}throw new Error(\"illegal catch attempt\");},delegateYield:function delegateYield(iterable,resultName,nextLoc){return this.delegate={iterator:values(iterable),resultName:resultName,nextLoc:nextLoc},\"next\"===this.method&&(this.arg=undefined),ContinueSentinel;}},exports;}import _ from'lodash';import*as dnerojs from'@dnerolabs/dnero-js';import KeyringController from'../controllers/keyring';import ComposableObservableStore from'../utils/ComposableObservableStore';import PreferencesController from'./preferences';import AccountManager from'./account-manager';import TransactionsController from'./transactions';import SimpleKeyring from'../keyrings/simple';import TrezorKeyring from'../keyrings/trezor';import LedgerKeyring from\"../keyrings/ledger\";import{EthereumDerivationPath,EthereumLedgerLiveDerivationPath,EthereumOtherDerivationPath,NumPathsPerPage,DneroDevDerivationPath}from\"../services/Wallet\";import{updateAccountBalances}from\"../state/actions/Wallet\";var _require=require('events'),EventEmitter=_require.EventEmitter;var DneroWalletController=/*#__PURE__*/function(_EventEmitter){_inherits(DneroWalletController,_EventEmitter);var _super=_createSuper(DneroWalletController);function DneroWalletController(opts){var _this;_classCallCheck(this,DneroWalletController);_this=_super.call(this);_this.getProvider=function(){return _this.provider;};_this.setProvider=function(provider){_this.provider=provider;};_this.sendUpdate=_this._sendUpdate.bind(_assertThisInitialized(_this));_this.opts=opts;var initState=opts.initState||{};_this.store=new ComposableObservableStore(initState);_this.memStore=new ComposableObservableStore();_this.preferencesController=new PreferencesController({initState:initState.preferencesController});_this.preferencesController.on('networkChanged',function(newNetwork){var selectedAddress=_this.preferencesController.getSelectedAddress();var newProvider=new dnerojs.providers.HttpProvider(newNetwork.chainId);_this.setProvider(newProvider);if(selectedAddress){_this.accountManager.updateAccounts();_this.accountManager.updateAccountStakes(selectedAddress);_this.accountManager.detectNewTokens();_this.transactionsController.updateAccountTransactions(selectedAddress);}});_this.preferencesController.on('accountTokensUpdated',function(){_this.accountManager.updateAccounts();});var network=_this.preferencesController.getNetwork();_this.provider=new dnerojs.providers.HttpProvider(network.chainId);var additionalKeyrings=[TrezorKeyring,LedgerKeyring];_this.keyringController=new KeyringController({initState:initState.keyringController,keyringTypes:additionalKeyrings});_this.keyringController.memStore.subscribe(function(s){return _this._onKeyringVaultUpdate(s);});_this.accountManager=new AccountManager({getProvider:_this.getProvider,getNetwork:_this.preferencesController.getNetwork.bind(_this.preferencesController),getTokens:_this.preferencesController.getTokens.bind(_this.preferencesController),preferencesController:_this.preferencesController});_this.transactionsController=new TransactionsController({initState:initState.transactionsController,getProvider:_this.getProvider,preferencesController:_this.preferencesController,signAndSendTransaction:_this.keyringController.signAndSendTransaction.bind(_this.keyringController),updateAccounts:_this.accountManager.updateAccounts.bind(_this.accountManager)});_this.store.updateStructure({keyringController:_this.keyringController.store,preferencesController:_this.preferencesController.store});_this.preferencesController.store.subscribe(function(data){try{if(localStorage){localStorage.setItem('preferencesController',JSON.stringify(_.pick(data,'accountTokens')));}}catch(e){}});_this.memStore.updateStructure({keyringController:_this.keyringController.memStore,preferencesController:_this.preferencesController.store,transactionsController:_this.transactionsController.memStore,accountManager:_this.accountManager.store});_this.memStore.subscribe(function(data){_this.sendUpdate();});var sendUpdate=function sendUpdate(data){// TODO anything?\n};_this.on('update',sendUpdate);_this.RPCApi=_this._setupRPCApi();return _this;}_createClass(DneroWalletController,[{key:\"getState\",value:/**\n     * The dnero-wallet-state of the various controllers, made available to the UI\n     *\n     * @returns {Object} status\n     */function getState(){var _this$keyringControll=this.keyringController.store.getState(),vault=_this$keyringControll.vault;var isInitialized=Boolean(vault);return _objectSpread(_objectSpread({},{isInitialized:isInitialized}),this.memStore.getFlatState());}/**\n     * A method for emitting the full Dnero Wallet state to all registered listeners.\n     * @private\n     */},{key:\"_sendUpdate\",value:function _sendUpdate(){this.emit('update',this.getState());}/**\n     * Handle a KeyringController update\n     * @param {Object} state - the KC state\n     * @returns {Promise<void>}\n     * @private\n     */},{key:\"_onKeyringVaultUpdate\",value:function(){var _onKeyringVaultUpdate2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(state){var keyrings,addresses;return _regeneratorRuntime().wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:keyrings=state.keyrings;addresses=keyrings.reduce(function(acc,_ref){var accounts=_ref.accounts;return acc.concat(accounts);},[]);if(addresses.length){_context.next=4;break;}return _context.abrupt(\"return\");case 4:// Ensure preferences + identities controller know about all addresses\nthis.preferencesController.syncAddresses(addresses);this.accountManager.syncAddresses(addresses);case 6:case\"end\":return _context.stop();}}},_callee,this);}));function _onKeyringVaultUpdate(_x){return _onKeyringVaultUpdate2.apply(this,arguments);}return _onKeyringVaultUpdate;}()/**\n     * Sets the first address in the state to the selected address\n     */},{key:\"selectFirstIdentity\",value:function(){var _selectFirstIdentity=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2(){var _this$preferencesCont,identities,address;return _regeneratorRuntime().wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_this$preferencesCont=this.preferencesController.store.getState(),identities=_this$preferencesCont.identities;address=Object.keys(identities)[0];_context2.next=4;return this.preferencesController.setSelectedAddress(address);case 4:case\"end\":return _context2.stop();}}},_callee2,this);}));function selectFirstIdentity(){return _selectFirstIdentity.apply(this,arguments);}return selectFirstIdentity;}()},{key:\"_setupRPCApi\",value:function _setupRPCApi(){return{getState:this._getState.bind(this),// Transactions\naddTransactionRequest:this._addTransactionRequest.bind(this),approveTransactionRequest:this._approveTransactionRequest.bind(this),rejectTransactionRequest:this._rejectTransactionRequest.bind(this),// Tokens\naddToken:this._addToken.bind(this),removeToken:this._removeToken.bind(this),// Preferences\nsetSelectedAddress:this._setSelectedAddress.bind(this),setSelectedNetwork:this._setSelectedNetwork.bind(this),// Accounts\nimportAccount:this._importAccount.bind(this),sendTransaction:this._sendTransaction.bind(this),updateAccountStakes:this._updateAccountStakes.bind(this),updateAccountBalances:this._updateAccountBalances.bind(this),updateAccountTransactions:this._updateAccountTransactions.bind(this),// Hardware wallets\nconnectHardware:this.connectHardware.bind(this),forgetDevice:this.forgetDevice.bind(this),checkHardwareStatus:this.checkHardwareStatus.bind(this),unlockHardwareWalletAccount:this.unlockHardwareWalletAccount.bind(this)};}},{key:\"_sendTransaction\",value:function(){var _sendTransaction2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee3(args){var transactionRequest,result;return _regeneratorRuntime().wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:transactionRequest=args.transactionRequest;if(this.getState().isInitialized){_context3.next=3;break;}throw Error('Your Dnero Wallet has not be initialized.');case 3:_context3.next=5;return this.transactionsController.addTransactionRequest(transactionRequest);case 5:result=_context3.sent;return _context3.abrupt(\"return\",result);case 7:case\"end\":return _context3.stop();}}},_callee3,this);}));function _sendTransaction(_x2){return _sendTransaction2.apply(this,arguments);}return _sendTransaction;}()},{key:\"_getState\",value:function(){var _getState2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee4(args){var result;return _regeneratorRuntime().wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:_context4.next=2;return this.getState();case 2:result=_context4.sent;return _context4.abrupt(\"return\",result);case 4:case\"end\":return _context4.stop();}}},_callee4,this);}));function _getState(_x3){return _getState2.apply(this,arguments);}return _getState;}()},{key:\"_addTransactionRequest\",value:function(){var _addTransactionRequest2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee5(args){var transactionRequest,result;return _regeneratorRuntime().wrap(function _callee5$(_context5){while(1){switch(_context5.prev=_context5.next){case 0:transactionRequest=args.transactionRequest;_context5.next=3;return this.transactionsController.addTransactionRequest(transactionRequest);case 3:result=_context5.sent;return _context5.abrupt(\"return\",result);case 5:case\"end\":return _context5.stop();}}},_callee5,this);}));function _addTransactionRequest(_x4){return _addTransactionRequest2.apply(this,arguments);}return _addTransactionRequest;}()},{key:\"_approveTransactionRequest\",value:function(){var _approveTransactionRequest2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee6(args){var transactionRequestId,onDependencySent,result;return _regeneratorRuntime().wrap(function _callee6$(_context6){while(1){switch(_context6.prev=_context6.next){case 0:transactionRequestId=args.transactionRequestId,onDependencySent=args.onDependencySent;_context6.next=3;return this.transactionsController.approveTransactionRequest(transactionRequestId,onDependencySent);case 3:result=_context6.sent;return _context6.abrupt(\"return\",result);case 5:case\"end\":return _context6.stop();}}},_callee6,this);}));function _approveTransactionRequest(_x5){return _approveTransactionRequest2.apply(this,arguments);}return _approveTransactionRequest;}()},{key:\"_rejectTransactionRequest\",value:function(){var _rejectTransactionRequest2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee7(args){var transactionRequestId,result;return _regeneratorRuntime().wrap(function _callee7$(_context7){while(1){switch(_context7.prev=_context7.next){case 0:transactionRequestId=args.transactionRequestId;_context7.next=3;return this.transactionsController.rejectTransactionRequest(transactionRequestId);case 3:result=_context7.sent;return _context7.abrupt(\"return\",result);case 5:case\"end\":return _context7.stop();}}},_callee7,this);}));function _rejectTransactionRequest(_x6){return _rejectTransactionRequest2.apply(this,arguments);}return _rejectTransactionRequest;}()},{key:\"_addToken\",value:function(){var _addToken2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee8(args){var token,address,symbol,decimals,image,result;return _regeneratorRuntime().wrap(function _callee8$(_context8){while(1){switch(_context8.prev=_context8.next){case 0:token=args.token;address=token.address,symbol=token.symbol,decimals=token.decimals,image=token.image;_context8.next=4;return this.preferencesController.addToken(address,symbol,decimals,image);case 4:result=_context8.sent;return _context8.abrupt(\"return\",result);case 6:case\"end\":return _context8.stop();}}},_callee8,this);}));function _addToken(_x7){return _addToken2.apply(this,arguments);}return _addToken;}()},{key:\"_removeToken\",value:function(){var _removeToken2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee9(args){var address,result;return _regeneratorRuntime().wrap(function _callee9$(_context9){while(1){switch(_context9.prev=_context9.next){case 0:address=args.address;_context9.next=3;return this.preferencesController.removeToken(address);case 3:result=_context9.sent;return _context9.abrupt(\"return\",result);case 5:case\"end\":return _context9.stop();}}},_callee9,this);}));function _removeToken(_x8){return _removeToken2.apply(this,arguments);}return _removeToken;}()},{key:\"_setSelectedAddress\",value:function(){var _setSelectedAddress2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee10(args){var address,result;return _regeneratorRuntime().wrap(function _callee10$(_context10){while(1){switch(_context10.prev=_context10.next){case 0:address=args.address;_context10.next=3;return this.preferencesController.setSelectedAddress(address);case 3:result=_context10.sent;return _context10.abrupt(\"return\",result);case 5:case\"end\":return _context10.stop();}}},_callee10,this);}));function _setSelectedAddress(_x9){return _setSelectedAddress2.apply(this,arguments);}return _setSelectedAddress;}()},{key:\"_setSelectedNetwork\",value:function(){var _setSelectedNetwork2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee11(args){var network,result;return _regeneratorRuntime().wrap(function _callee11$(_context11){while(1){switch(_context11.prev=_context11.next){case 0:network=args.network;_context11.next=3;return this.preferencesController.setNetwork(network);case 3:result=_context11.sent;return _context11.abrupt(\"return\",result);case 5:case\"end\":return _context11.stop();}}},_callee11,this);}));function _setSelectedNetwork(_x10){return _setSelectedNetwork2.apply(this,arguments);}return _setSelectedNetwork;}()},{key:\"_importAccount\",value:function(){var _importAccount2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee12(args){var importType,privateKey,encryptedJson,encryptedJsonPassword,name,privateKeyToImport,wallet,keyring,accounts,allAccounts,newAccount;return _regeneratorRuntime().wrap(function _callee12$(_context12){while(1){switch(_context12.prev=_context12.next){case 0:importType=args.importType,privateKey=args.privateKey,encryptedJson=args.encryptedJson,encryptedJsonPassword=args.encryptedJsonPassword,name=args.name;privateKeyToImport=null;if(!privateKey){_context12.next=6;break;}privateKeyToImport=privateKey;_context12.next=12;break;case 6:if(!(encryptedJson&&encryptedJsonPassword)){_context12.next=11;break;}wallet=dnerojs.Wallet.fromEncryptedJson(encryptedJson,encryptedJsonPassword,null);privateKeyToImport=wallet.privateKey;_context12.next=12;break;case 11:throw new Error('Invalid account.');case 12:_context12.next=14;return this.keyringController.addNewKeyring(SimpleKeyring.type,[privateKeyToImport]);case 14:keyring=_context12.sent;_context12.next=17;return keyring.getAccounts();case 17:accounts=_context12.sent;_context12.next=20;return this.keyringController.getAccounts();case 20:allAccounts=_context12.sent;this.preferencesController.setAddresses(allAccounts);// Set account name\nnewAccount=accounts[0];if(!(newAccount&&name)){_context12.next=26;break;}_context12.next=26;return this.preferencesController.setAccountName(newAccount,name);case 26:_context12.next=28;return this.preferencesController.setSelectedAddress(newAccount);case 28:this.accountManager.start();return _context12.abrupt(\"return\",true);case 30:case\"end\":return _context12.stop();}}},_callee12,this);}));function _importAccount(_x11){return _importAccount2.apply(this,arguments);}return _importAccount;}()},{key:\"_updateAccountStakes\",value:function(){var _updateAccountStakes2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee13(args){var address;return _regeneratorRuntime().wrap(function _callee13$(_context13){while(1){switch(_context13.prev=_context13.next){case 0:address=args.address;return _context13.abrupt(\"return\",this.accountManager.updateAccountStakes(address));case 2:case\"end\":return _context13.stop();}}},_callee13,this);}));function _updateAccountStakes(_x12){return _updateAccountStakes2.apply(this,arguments);}return _updateAccountStakes;}()},{key:\"_updateAccountBalances\",value:function(){var _updateAccountBalances2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee14(args){return _regeneratorRuntime().wrap(function _callee14$(_context14){while(1){switch(_context14.prev=_context14.next){case 0:_objectDestructuringEmpty(args);return _context14.abrupt(\"return\",this.accountManager.updateAccounts());case 2:case\"end\":return _context14.stop();}}},_callee14,this);}));function _updateAccountBalances(_x13){return _updateAccountBalances2.apply(this,arguments);}return _updateAccountBalances;}()},{key:\"_updateAccountTransactions\",value:function(){var _updateAccountTransactions2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee15(args){var address;return _regeneratorRuntime().wrap(function _callee15$(_context15){while(1){switch(_context15.prev=_context15.next){case 0:address=args.address;return _context15.abrupt(\"return\",this.transactionsController.updateAccountTransactions(address));case 2:case\"end\":return _context15.stop();}}},_callee15,this);}));function _updateAccountTransactions(_x14){return _updateAccountTransactions2.apply(this,arguments);}return _updateAccountTransactions;}()//\n// Hardware\n//\n},{key:\"getKeyringForDevice\",value:function(){var _getKeyringForDevice=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee16(deviceName){var hdPath,keyringName,keyring,_args16=arguments;return _regeneratorRuntime().wrap(function _callee16$(_context16){while(1){switch(_context16.prev=_context16.next){case 0:hdPath=_args16.length>1&&_args16[1]!==undefined?_args16[1]:null;keyringName=null;_context16.t0=deviceName;_context16.next=_context16.t0==='trezor'?5:_context16.t0==='ledger'?7:9;break;case 5:keyringName=TrezorKeyring.type;return _context16.abrupt(\"break\",10);case 7:keyringName=LedgerKeyring.type;return _context16.abrupt(\"break\",10);case 9:throw new Error('DneroWalletController:getKeyringForDevice - Unknown device');case 10:_context16.next=12;return this.keyringController.getKeyringsByType(keyringName)[0];case 12:keyring=_context16.sent;if(keyring){_context16.next=17;break;}_context16.next=16;return this.keyringController.addNewKeyring(keyringName);case 16:keyring=_context16.sent;case 17:if(hdPath&&keyring.setHdPath){// Transform the hdPath so it can be used properly\nif(hdPath===EthereumDerivationPath){hdPath=EthereumDerivationPath;}else if(hdPath===EthereumOtherDerivationPath){hdPath=EthereumOtherDerivationPath;}else if(hdPath===EthereumLedgerLiveDerivationPath){hdPath=\"m/44'/60'/0'/0/0\";}keyring.setHdPath(hdPath);}return _context16.abrupt(\"return\",keyring);case 19:case\"end\":return _context16.stop();}}},_callee16,this);}));function getKeyringForDevice(_x15){return _getKeyringForDevice.apply(this,arguments);}return getKeyringForDevice;}()/**\n     * Fetch account list from a trezor device.\n     *\n     * @returns [] accounts\n     */},{key:\"connectHardware\",value:function(){var _connectHardware=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee17(deviceName,page,hdPath){var keyring,accounts,oldAccounts,accountsToTrack;return _regeneratorRuntime().wrap(function _callee17$(_context17){while(1){switch(_context17.prev=_context17.next){case 0:_context17.next=2;return this.getKeyringForDevice(deviceName,hdPath);case 2:keyring=_context17.sent;accounts=[];_context17.t0=page;_context17.next=_context17.t0===-1?7:_context17.t0===1?11:15;break;case 7:_context17.next=9;return keyring.getPreviousPage();case 9:accounts=_context17.sent;return _context17.abrupt(\"break\",18);case 11:_context17.next=13;return keyring.getNextPage();case 13:accounts=_context17.sent;return _context17.abrupt(\"break\",18);case 15:_context17.next=17;return keyring.getFirstPage();case 17:accounts=_context17.sent;case 18:_context17.next=20;return this.keyringController.getAccounts();case 20:oldAccounts=_context17.sent;accountsToTrack=_toConsumableArray(new Set(oldAccounts.concat(accounts.map(function(a){return a.address.toLowerCase();}))));this.accountManager.syncAddresses(accountsToTrack);return _context17.abrupt(\"return\",accounts);case 24:case\"end\":return _context17.stop();}}},_callee17,this);}));function connectHardware(_x16,_x17,_x18){return _connectHardware.apply(this,arguments);}return connectHardware;}()/**\n     * Check if the device is unlocked\n     *\n     * @returns {Promise<boolean>}\n     */},{key:\"checkHardwareStatus\",value:function(){var _checkHardwareStatus=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee18(deviceName,hdPath){var keyring;return _regeneratorRuntime().wrap(function _callee18$(_context18){while(1){switch(_context18.prev=_context18.next){case 0:_context18.next=2;return this.getKeyringForDevice(deviceName,hdPath);case 2:keyring=_context18.sent;return _context18.abrupt(\"return\",keyring.isUnlocked());case 4:case\"end\":return _context18.stop();}}},_callee18,this);}));function checkHardwareStatus(_x19,_x20){return _checkHardwareStatus.apply(this,arguments);}return checkHardwareStatus;}()/**\n     * Clear\n     *\n     * @returns {Promise<boolean>}\n     */},{key:\"forgetDevice\",value:function(){var _forgetDevice=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee19(deviceName){var keyring;return _regeneratorRuntime().wrap(function _callee19$(_context19){while(1){switch(_context19.prev=_context19.next){case 0:_context19.next=2;return this.getKeyringForDevice(deviceName);case 2:keyring=_context19.sent;keyring.forgetDevice();return _context19.abrupt(\"return\",true);case 5:case\"end\":return _context19.stop();}}},_callee19,this);}));function forgetDevice(_x21){return _forgetDevice.apply(this,arguments);}return forgetDevice;}()/**\n     * Imports an account from a trezor device.\n     *\n     * @returns {} keyState\n     */},{key:\"unlockHardwareWalletAccount\",value:function(){var _unlockHardwareWalletAccount=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee20(index,deviceName,hdPath){var _this2=this;var keyring,oldAccounts,keyState,newAccounts,_this$preferencesCont2,identities;return _regeneratorRuntime().wrap(function _callee20$(_context20){while(1){switch(_context20.prev=_context20.next){case 0:_context20.next=2;return this.getKeyringForDevice(deviceName,hdPath);case 2:keyring=_context20.sent;keyring.setAccountToUnlock(index);_context20.next=6;return this.keyringController.getAccounts();case 6:oldAccounts=_context20.sent;_context20.next=9;return this.keyringController.addNewAccount(keyring);case 9:keyState=_context20.sent;_context20.next=12;return this.keyringController.getAccounts();case 12:newAccounts=_context20.sent;this.preferencesController.setAddresses(newAccounts);newAccounts.forEach(function(address){if(!oldAccounts.includes(address)){// Select the account\n_this2.preferencesController.setSelectedAddress(address);}});this.accountManager.start();_this$preferencesCont2=this.preferencesController.store.getState(),identities=_this$preferencesCont2.identities;return _context20.abrupt(\"return\",_objectSpread(_objectSpread({},keyState),{},{identities:identities}));case 18:case\"end\":return _context20.stop();}}},_callee20,this);}));function unlockHardwareWalletAccount(_x22,_x23,_x24){return _unlockHardwareWalletAccount.apply(this,arguments);}return unlockHardwareWalletAccount;}()}]);return DneroWalletController;}(EventEmitter);export{DneroWalletController as default};","map":{"version":3,"names":["_","dnerojs","KeyringController","ComposableObservableStore","PreferencesController","AccountManager","TransactionsController","SimpleKeyring","TrezorKeyring","LedgerKeyring","EthereumDerivationPath","EthereumLedgerLiveDerivationPath","EthereumOtherDerivationPath","NumPathsPerPage","DneroDevDerivationPath","updateAccountBalances","require","EventEmitter","DneroWalletController","opts","getProvider","provider","setProvider","sendUpdate","_sendUpdate","bind","initState","store","memStore","preferencesController","on","newNetwork","selectedAddress","getSelectedAddress","newProvider","providers","HttpProvider","chainId","accountManager","updateAccounts","updateAccountStakes","detectNewTokens","transactionsController","updateAccountTransactions","network","getNetwork","additionalKeyrings","keyringController","keyringTypes","subscribe","s","_onKeyringVaultUpdate","getTokens","signAndSendTransaction","updateStructure","data","localStorage","setItem","JSON","stringify","pick","e","RPCApi","_setupRPCApi","getState","vault","isInitialized","Boolean","getFlatState","emit","state","keyrings","addresses","reduce","acc","accounts","concat","length","syncAddresses","identities","address","Object","keys","setSelectedAddress","_getState","addTransactionRequest","_addTransactionRequest","approveTransactionRequest","_approveTransactionRequest","rejectTransactionRequest","_rejectTransactionRequest","addToken","_addToken","removeToken","_removeToken","_setSelectedAddress","setSelectedNetwork","_setSelectedNetwork","importAccount","_importAccount","sendTransaction","_sendTransaction","_updateAccountStakes","_updateAccountBalances","_updateAccountTransactions","connectHardware","forgetDevice","checkHardwareStatus","unlockHardwareWalletAccount","args","transactionRequest","Error","result","transactionRequestId","onDependencySent","token","symbol","decimals","image","setNetwork","importType","privateKey","encryptedJson","encryptedJsonPassword","name","privateKeyToImport","wallet","Wallet","fromEncryptedJson","addNewKeyring","type","keyring","getAccounts","allAccounts","setAddresses","newAccount","setAccountName","start","deviceName","hdPath","keyringName","getKeyringsByType","setHdPath","page","getKeyringForDevice","getPreviousPage","getNextPage","getFirstPage","oldAccounts","accountsToTrack","Set","map","a","toLowerCase","isUnlocked","index","setAccountToUnlock","addNewAccount","keyState","newAccounts","forEach","includes"],"sources":["/Users/jjestrella/DNERO_Protocol/dnerowebwallet/src/controllers/dnero-wallet.js"],"sourcesContent":["import _ from 'lodash';\nimport * as dnerojs from '@dnerolabs/dnero-js';\nimport KeyringController from '../controllers/keyring';\nimport ComposableObservableStore from '../utils/ComposableObservableStore';\nimport PreferencesController from './preferences';\nimport AccountManager from './account-manager';\nimport TransactionsController from './transactions';\nimport SimpleKeyring from '../keyrings/simple';\nimport TrezorKeyring from '../keyrings/trezor';\nimport LedgerKeyring from \"../keyrings/ledger\";\nimport {\n    EthereumDerivationPath, EthereumLedgerLiveDerivationPath,\n    EthereumOtherDerivationPath,\n    NumPathsPerPage,\n    DneroDevDerivationPath\n} from \"../services/Wallet\";\nimport {updateAccountBalances} from \"../state/actions/Wallet\";\n\nconst { EventEmitter } = require('events');\n\nexport default class DneroWalletController extends EventEmitter {\n    constructor(opts) {\n        super();\n\n        this.sendUpdate = this._sendUpdate.bind(this);\n        this.opts = opts;\n\n        const initState = opts.initState || {};\n\n        this.store = new ComposableObservableStore(initState);\n        this.memStore = new ComposableObservableStore();\n\n        this.preferencesController = new PreferencesController({\n            initState: initState.preferencesController\n        });\n        this.preferencesController.on('networkChanged', (newNetwork) => {\n            const selectedAddress = this.preferencesController.getSelectedAddress();\n            const newProvider = new dnerojs.providers.HttpProvider(newNetwork.chainId);\n            this.setProvider(newProvider);\n\n            if(selectedAddress) {\n                this.accountManager.updateAccounts();\n                this.accountManager.updateAccountStakes(selectedAddress);\n                this.accountManager.detectNewTokens();\n\n                this.transactionsController.updateAccountTransactions(selectedAddress);\n            }\n        });\n        this.preferencesController.on('accountTokensUpdated', () => {\n            this.accountManager.updateAccounts();\n        });\n\n        const network = this.preferencesController.getNetwork();\n        this.provider =  new dnerojs.providers.HttpProvider(network.chainId);\n\n        const additionalKeyrings = [TrezorKeyring, LedgerKeyring]\n        this.keyringController = new KeyringController({\n            initState: initState.keyringController,\n            keyringTypes: additionalKeyrings,\n        });\n        this.keyringController.memStore.subscribe((s) =>\n            this._onKeyringVaultUpdate(s),\n        );\n\n        this.accountManager = new AccountManager({\n            getProvider: this.getProvider,\n            getNetwork: this.preferencesController.getNetwork.bind(this.preferencesController),\n            getTokens: this.preferencesController.getTokens.bind(this.preferencesController),\n            preferencesController: this.preferencesController,\n        });\n\n        this.transactionsController = new TransactionsController({\n            initState: initState.transactionsController,\n\n            getProvider: this.getProvider,\n\n            preferencesController: this.preferencesController,\n\n            signAndSendTransaction: this.keyringController.signAndSendTransaction.bind(this.keyringController),\n\n            updateAccounts: this.accountManager.updateAccounts.bind(this.accountManager)\n        });\n\n        this.store.updateStructure({\n            keyringController: this.keyringController.store,\n            preferencesController: this.preferencesController.store,\n        });\n\n        this.preferencesController.store.subscribe((data) => {\n            try {\n                if(localStorage){\n                    localStorage.setItem('preferencesController', JSON.stringify(_.pick(data, 'accountTokens')));\n                }\n            }\n            catch (e) {\n\n            }\n        });\n\n        this.memStore.updateStructure({\n            keyringController: this.keyringController.memStore,\n            preferencesController: this.preferencesController.store,\n            transactionsController: this.transactionsController.memStore,\n            accountManager: this.accountManager.store\n        });\n        this.memStore.subscribe((data) => {\n            this.sendUpdate();\n        });\n\n\n        const sendUpdate = (data) => {\n            // TODO anything?\n        };\n        this.on('update', sendUpdate);\n\n        this.RPCApi = this._setupRPCApi();\n    }\n\n    getProvider = () => {\n        return this.provider;\n    };\n\n    setProvider = (provider) => {\n        this.provider = provider;\n    };\n\n    /**\n     * The dnero-wallet-state of the various controllers, made available to the UI\n     *\n     * @returns {Object} status\n     */\n    getState() {\n        const { vault } = this.keyringController.store.getState();\n        const isInitialized = Boolean(vault);\n\n        return {\n            ...{ isInitialized },\n            ...this.memStore.getFlatState(),\n        };\n    }\n\n    /**\n     * A method for emitting the full Dnero Wallet state to all registered listeners.\n     * @private\n     */\n    _sendUpdate() {\n        this.emit('update', this.getState());\n    }\n\n\n    /**\n     * Handle a KeyringController update\n     * @param {Object} state - the KC state\n     * @returns {Promise<void>}\n     * @private\n     */\n    async _onKeyringVaultUpdate(state) {\n        const { keyrings } = state;\n        const addresses = keyrings.reduce(\n            (acc, { accounts }) => acc.concat(accounts),\n            [],\n        );\n\n        if (!addresses.length) {\n            return;\n        }\n\n        // Ensure preferences + identities controller know about all addresses\n        this.preferencesController.syncAddresses(addresses);\n        this.accountManager.syncAddresses(addresses);\n    }\n\n    /**\n     * Sets the first address in the state to the selected address\n     */\n    async selectFirstIdentity(){\n        const { identities } = this.preferencesController.store.getState();\n        const address = Object.keys(identities)[0];\n        await this.preferencesController.setSelectedAddress(address);\n    }\n\n    _setupRPCApi(){\n        return {\n            getState: this._getState.bind(this),\n\n            // Transactions\n            addTransactionRequest: this._addTransactionRequest.bind(this),\n            approveTransactionRequest: this._approveTransactionRequest.bind(this),\n            rejectTransactionRequest: this._rejectTransactionRequest.bind(this),\n\n            // Tokens\n            addToken: this._addToken.bind(this),\n            removeToken: this._removeToken.bind(this),\n\n            // Preferences\n            setSelectedAddress: this._setSelectedAddress.bind(this),\n            setSelectedNetwork: this._setSelectedNetwork.bind(this),\n\n            // Accounts\n            importAccount: this._importAccount.bind(this),\n\n            sendTransaction: this._sendTransaction.bind(this),\n\n            updateAccountStakes: this._updateAccountStakes.bind(this),\n            updateAccountBalances: this._updateAccountBalances.bind(this),\n            updateAccountTransactions: this._updateAccountTransactions.bind(this),\n\n            // Hardware wallets\n            connectHardware: this.connectHardware.bind(this),\n            forgetDevice: this.forgetDevice.bind(this),\n            checkHardwareStatus: this.checkHardwareStatus.bind(this),\n            unlockHardwareWalletAccount: this.unlockHardwareWalletAccount.bind(this),\n        };\n    }\n\n\n    async _sendTransaction(args){\n        const {transactionRequest} = args;\n\n        if(!this.getState().isInitialized){\n            throw Error('Your Dnero Wallet has not be initialized.');\n        }\n\n        const result = await this.transactionsController.addTransactionRequest(transactionRequest);\n\n        return result;\n    }\n\n    async _getState(args) {\n        const result = await this.getState();\n\n        return result;\n    }\n\n    async _addTransactionRequest(args) {\n        const {transactionRequest} = args;\n\n        const result = await this.transactionsController.addTransactionRequest(transactionRequest);\n\n        return result;\n    }\n\n    async _approveTransactionRequest(args) {\n        const {transactionRequestId, onDependencySent} = args;\n\n        const result = await this.transactionsController.approveTransactionRequest(transactionRequestId, onDependencySent);\n\n        return result;\n    }\n\n    async _rejectTransactionRequest(args) {\n        const {transactionRequestId} = args;\n\n        const result = await this.transactionsController.rejectTransactionRequest(transactionRequestId);\n\n        return result;\n    }\n\n    async _addToken(args) {\n        const {token} = args;\n        const {address, symbol, decimals, image} = token;\n\n        const result = await this.preferencesController.addToken(address, symbol, decimals, image);\n\n        return result;\n    }\n\n    async _removeToken(args) {\n        const {address} = args;\n\n        const result = await this.preferencesController.removeToken(address);\n\n        return result;\n    }\n\n    async _setSelectedAddress(args) {\n        const {address} = args;\n\n        const result = await this.preferencesController.setSelectedAddress(address);\n\n        return result;\n    }\n\n    async _setSelectedNetwork(args) {\n        const {network} = args;\n\n        const result = await this.preferencesController.setNetwork(network);\n\n        return result;\n    }\n\n    async _importAccount(args) {\n        const {importType, privateKey, encryptedJson, encryptedJsonPassword, name} = args;\n        let privateKeyToImport = null;\n\n        if(privateKey){\n            privateKeyToImport = privateKey;\n        }\n        else if(encryptedJson && encryptedJsonPassword){\n            const wallet = dnerojs.Wallet.fromEncryptedJson(encryptedJson, encryptedJsonPassword, null);\n            privateKeyToImport = wallet.privateKey;\n        }\n        else{\n            throw new Error('Invalid account.');\n        }\n\n        const keyring = await this.keyringController.addNewKeyring(\n            SimpleKeyring.type,\n            [privateKeyToImport],\n        );\n\n        const accounts = await keyring.getAccounts();\n        // update accounts in preferences controller\n        const allAccounts = await this.keyringController.getAccounts();\n        this.preferencesController.setAddresses(allAccounts);\n\n        // Set account name\n        const newAccount = accounts[0];\n        if(newAccount && name){\n            await this.preferencesController.setAccountName(newAccount, name);\n        }\n\n        // set new account as selected\n        await this.preferencesController.setSelectedAddress(newAccount);\n\n        this.accountManager.start();\n\n        return true;\n    }\n\n\n    async _updateAccountStakes(args) {\n        const {address} = args;\n\n        return this.accountManager.updateAccountStakes(address);\n    }\n\n    async _updateAccountBalances(args) {\n        const {} = args;\n\n        return this.accountManager.updateAccounts();\n    }\n\n    async _updateAccountTransactions(args) {\n        const {address} = args;\n\n        return this.transactionsController.updateAccountTransactions(address);\n    }\n\n    //\n    // Hardware\n    //\n\n    async getKeyringForDevice(deviceName, hdPath = null) {\n        let keyringName = null\n        switch (deviceName) {\n            case 'trezor':\n                keyringName = TrezorKeyring.type\n                break\n            case 'ledger':\n                keyringName = LedgerKeyring.type\n                break\n            default:\n                throw new Error(\n                    'DneroWalletController:getKeyringForDevice - Unknown device',\n                )\n        }\n        let keyring = await this.keyringController.getKeyringsByType(keyringName)[0]\n        if (!keyring) {\n            keyring = await this.keyringController.addNewKeyring(keyringName)\n        }\n        if (hdPath && keyring.setHdPath) {\n            // Transform the hdPath so it can be used properly\n            if(hdPath === EthereumDerivationPath){\n                hdPath = EthereumDerivationPath;\n            }\n            else if(hdPath === EthereumOtherDerivationPath){\n                hdPath = EthereumOtherDerivationPath;\n            }\n            else if(hdPath === EthereumLedgerLiveDerivationPath){\n                hdPath = \"m/44'/60'/0'/0/0\";\n            }\n\n            keyring.setHdPath(hdPath)\n        }\n\n        return keyring\n    }\n\n    /**\n     * Fetch account list from a trezor device.\n     *\n     * @returns [] accounts\n     */\n    async connectHardware(deviceName, page, hdPath) {\n        const keyring = await this.getKeyringForDevice(deviceName, hdPath)\n        let accounts = []\n        switch (page) {\n            case -1:\n                accounts = await keyring.getPreviousPage()\n                break\n            case 1:\n                accounts = await keyring.getNextPage()\n                break\n            default:\n                accounts = await keyring.getFirstPage()\n        }\n\n        // Merge with existing accounts\n        // and make sure addresses are not repeated\n        const oldAccounts = await this.keyringController.getAccounts()\n        const accountsToTrack = [\n            ...new Set(\n                oldAccounts.concat(accounts.map((a) => a.address.toLowerCase())),\n            ),\n        ]\n        this.accountManager.syncAddresses(accountsToTrack)\n        return accounts\n    }\n\n    /**\n     * Check if the device is unlocked\n     *\n     * @returns {Promise<boolean>}\n     */\n    async checkHardwareStatus(deviceName, hdPath) {\n        const keyring = await this.getKeyringForDevice(deviceName, hdPath)\n        return keyring.isUnlocked()\n    }\n\n    /**\n     * Clear\n     *\n     * @returns {Promise<boolean>}\n     */\n    async forgetDevice(deviceName) {\n        const keyring = await this.getKeyringForDevice(deviceName)\n        keyring.forgetDevice()\n        return true\n    }\n\n    /**\n     * Imports an account from a trezor device.\n     *\n     * @returns {} keyState\n     */\n    async unlockHardwareWalletAccount(index, deviceName, hdPath) {\n        const keyring = await this.getKeyringForDevice(deviceName, hdPath)\n\n        keyring.setAccountToUnlock(index)\n        const oldAccounts = await this.keyringController.getAccounts()\n        const keyState = await this.keyringController.addNewAccount(keyring)\n        const newAccounts = await this.keyringController.getAccounts()\n        this.preferencesController.setAddresses(newAccounts)\n        newAccounts.forEach((address) => {\n            if (!oldAccounts.includes(address)) {\n                // Select the account\n                this.preferencesController.setSelectedAddress(address)\n            }\n        });\n\n        this.accountManager.start();\n\n        const { identities } = this.preferencesController.store.getState()\n        return { ...keyState, identities }\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}