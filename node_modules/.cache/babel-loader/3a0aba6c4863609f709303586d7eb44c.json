{"ast":null,"code":"import _classCallCheck from\"/Users/jjestrella/DNERO_Protocol/dnerowebwallet/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/jjestrella/DNERO_Protocol/dnerowebwallet/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/Users/jjestrella/DNERO_Protocol/dnerowebwallet/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/jjestrella/DNERO_Protocol/dnerowebwallet/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import*as dnerojs from'@dnerolabs/dnero-js';var _require=require('events'),EventEmitter=_require.EventEmitter;var Type='SimpleKeyring';var SimpleKeyring=/*#__PURE__*/function(_EventEmitter){_inherits(SimpleKeyring,_EventEmitter);var _super=_createSuper(SimpleKeyring);function SimpleKeyring(opts){var _this;_classCallCheck(this,SimpleKeyring);_this=_super.call(this);_this.type=Type;_this.wallets=[];_this.deserialize(opts);return _this;}_createClass(SimpleKeyring,[{key:\"serialize\",value:function serialize(){return Promise.resolve(this.wallets.map(function(w){return w.privateKey;}));}},{key:\"deserialize\",value:function deserialize(){var _this2=this;var privateKeys=arguments.length>0&&arguments[0]!==undefined?arguments[0]:[];return new Promise(function(resolve,reject){try{_this2.wallets=privateKeys.map(function(privateKey){var wallet=new dnerojs.Wallet(privateKey);return wallet;});}catch(e){reject(e);}resolve();});}},{key:\"addAccounts\",value:function addAccounts(){var n=arguments.length>0&&arguments[0]!==undefined?arguments[0]:1;var newWallets=[];for(var i=0;i<n;i++){var wallet=dnerojs.Wallet.createRandom(null);newWallets.push(wallet);}this.wallets=this.wallets.concat(newWallets);var walletAddresses=newWallets.map(function(w){return w.getAddress();});return Promise.resolve(walletAddresses);}},{key:\"getAccounts\",value:function getAccounts(){return Promise.resolve(this.wallets.map(function(w){return w.getAddress();}));}},{key:\"signTransaction\",value:function signTransaction(fromAddress,transaction,provider){var wallet=this._getWalletForAccount(fromAddress);wallet=wallet.connect(provider);var signedTxBytes=wallet.signTransaction(transaction);// tx.sign(privKey);\nreturn Promise.resolve(signedTxBytes);}},{key:\"signAndSendTransaction\",value:function signAndSendTransaction(fromAddress,transaction,provider){var wallet=this._getWalletForAccount(fromAddress);wallet=wallet.connect(provider);transaction.setFrom(fromAddress);var result=wallet.sendTransaction(transaction);return Promise.resolve(result);}// exportAccount should return a hex-encoded private key:\n},{key:\"exportAccount\",value:function exportAccount(address){var wallet=this._getWalletForAccount(address);return Promise.resolve(wallet.privateKey());}},{key:\"removeAccount\",value:function removeAccount(address){var addressLC=address.toLowerCase();if(!this.wallets.map(function(w){return w.getAddress().toLowerCase();}).includes(addressLC)){throw new Error(\"Address \".concat(address,\" not found in this keyring\"));}this.wallets=this.wallets.filter(function(w){return w.getAddress().toLowerCase()!==addressLC;});}},{key:\"getPrivateKeyFor\",value:function getPrivateKeyFor(address){if(!address){throw new Error('Must specify address.');}var wallet=this._getWalletForAccount(address);var privKey=wallet.privateKey();return privKey;}/**\n     * @private\n     */},{key:\"_getWalletForAccount\",value:function _getWalletForAccount(address){var wallet=this.wallets.find(function(w){return w.getAddress()===address;});if(!wallet){throw new Error('Simple Keyring - Unable to find matching address.');}return wallet;}}]);return SimpleKeyring;}(EventEmitter);SimpleKeyring.type=Type;export default SimpleKeyring;","map":{"version":3,"names":["dnerojs","require","EventEmitter","Type","SimpleKeyring","opts","type","wallets","deserialize","Promise","resolve","map","w","privateKey","privateKeys","reject","wallet","Wallet","e","n","newWallets","i","createRandom","push","concat","walletAddresses","getAddress","fromAddress","transaction","provider","_getWalletForAccount","connect","signedTxBytes","signTransaction","setFrom","result","sendTransaction","address","addressLC","toLowerCase","includes","Error","filter","privKey","find"],"sources":["/Users/jjestrella/DNERO_Protocol/dnerowebwallet/src/keyrings/simple/index.js"],"sourcesContent":["import * as dnerojs from '@dnerolabs/dnero-js';\n\nconst { EventEmitter } = require('events');\n\nconst Type = 'SimpleKeyring';\n\nclass SimpleKeyring extends EventEmitter{\n    constructor (opts) {\n        super();\n        this.type = Type;\n        this.wallets = [];\n        this.deserialize(opts);\n    }\n\n    serialize () {\n        return Promise.resolve(this.wallets.map((w) => w.privateKey));\n    }\n\n    deserialize (privateKeys = []) {\n        return new Promise((resolve, reject) => {\n            try {\n                this.wallets = privateKeys.map((privateKey) => {\n                    const wallet = new dnerojs.Wallet(privateKey);\n                    return wallet;\n                });\n            } catch (e) {\n                reject(e);\n            }\n            resolve();\n        });\n    }\n\n    addAccounts (n = 1) {\n        const newWallets = [];\n        for (let i = 0; i < n; i++) {\n            const wallet = dnerojs.Wallet.createRandom(null);\n            newWallets.push(wallet);\n        }\n        this.wallets = this.wallets.concat(newWallets);\n        const walletAddresses = newWallets.map((w) => w.getAddress());\n        return Promise.resolve(walletAddresses);\n    }\n\n    getAccounts () {\n        return Promise.resolve(this.wallets.map((w) => w.getAddress()));\n    }\n\n    signTransaction (fromAddress, transaction, provider) {\n        let wallet = this._getWalletForAccount(fromAddress);\n        wallet = wallet.connect(provider);\n        const signedTxBytes = wallet.signTransaction(transaction);\n\n        // tx.sign(privKey);\n        return Promise.resolve(signedTxBytes);\n    }\n\n    signAndSendTransaction (fromAddress, transaction, provider) {\n        let wallet = this._getWalletForAccount(fromAddress);\n        wallet = wallet.connect(provider);\n        transaction.setFrom(fromAddress);\n        const result = wallet.sendTransaction(transaction);\n\n        return Promise.resolve(result);\n    }\n\n    // exportAccount should return a hex-encoded private key:\n    exportAccount (address) {\n        const wallet = this._getWalletForAccount(address);\n        return Promise.resolve(wallet.privateKey());\n    }\n\n    removeAccount (address) {\n        const addressLC = address.toLowerCase();\n        if (!this.wallets.map((w) => w.getAddress().toLowerCase()).includes(addressLC)) {\n            throw new Error(`Address ${address} not found in this keyring`);\n        }\n        this.wallets = this.wallets.filter((w) => w.getAddress().toLowerCase() !== addressLC);\n    }\n\n    getPrivateKeyFor (address) {\n        if (!address) {\n            throw new Error('Must specify address.');\n        }\n        const wallet = this._getWalletForAccount(address);\n        const privKey = wallet.privateKey();\n        return privKey;\n    }\n\n    /**\n     * @private\n     */\n    _getWalletForAccount (address) {\n        let wallet = this.wallets.find((w) => w.getAddress() === address);\n        if (!wallet) {\n            throw new Error('Simple Keyring - Unable to find matching address.');\n        }\n\n        return wallet;\n    }\n}\n\nSimpleKeyring.type = Type;\n\nexport default SimpleKeyring;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}