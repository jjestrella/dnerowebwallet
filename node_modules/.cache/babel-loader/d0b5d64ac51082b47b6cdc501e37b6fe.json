{"ast":null,"code":"import _asyncToGenerator from\"/Users/jjestrella/DNERO_Protocol/dnerowebwallet/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";function _regeneratorRuntime(){\"use strict\";/*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */_regeneratorRuntime=function _regeneratorRuntime(){return exports;};var exports={},Op=Object.prototype,hasOwn=Op.hasOwnProperty,$Symbol=\"function\"==typeof Symbol?Symbol:{},iteratorSymbol=$Symbol.iterator||\"@@iterator\",asyncIteratorSymbol=$Symbol.asyncIterator||\"@@asyncIterator\",toStringTagSymbol=$Symbol.toStringTag||\"@@toStringTag\";function define(obj,key,value){return Object.defineProperty(obj,key,{value:value,enumerable:!0,configurable:!0,writable:!0}),obj[key];}try{define({},\"\");}catch(err){define=function define(obj,key,value){return obj[key]=value;};}function wrap(innerFn,outerFn,self,tryLocsList){var protoGenerator=outerFn&&outerFn.prototype instanceof Generator?outerFn:Generator,generator=Object.create(protoGenerator.prototype),context=new Context(tryLocsList||[]);return generator._invoke=function(innerFn,self,context){var state=\"suspendedStart\";return function(method,arg){if(\"executing\"===state)throw new Error(\"Generator is already running\");if(\"completed\"===state){if(\"throw\"===method)throw arg;return doneResult();}for(context.method=method,context.arg=arg;;){var delegate=context.delegate;if(delegate){var delegateResult=maybeInvokeDelegate(delegate,context);if(delegateResult){if(delegateResult===ContinueSentinel)continue;return delegateResult;}}if(\"next\"===context.method)context.sent=context._sent=context.arg;else if(\"throw\"===context.method){if(\"suspendedStart\"===state)throw state=\"completed\",context.arg;context.dispatchException(context.arg);}else\"return\"===context.method&&context.abrupt(\"return\",context.arg);state=\"executing\";var record=tryCatch(innerFn,self,context);if(\"normal\"===record.type){if(state=context.done?\"completed\":\"suspendedYield\",record.arg===ContinueSentinel)continue;return{value:record.arg,done:context.done};}\"throw\"===record.type&&(state=\"completed\",context.method=\"throw\",context.arg=record.arg);}};}(innerFn,self,context),generator;}function tryCatch(fn,obj,arg){try{return{type:\"normal\",arg:fn.call(obj,arg)};}catch(err){return{type:\"throw\",arg:err};}}exports.wrap=wrap;var ContinueSentinel={};function Generator(){}function GeneratorFunction(){}function GeneratorFunctionPrototype(){}var IteratorPrototype={};define(IteratorPrototype,iteratorSymbol,function(){return this;});var getProto=Object.getPrototypeOf,NativeIteratorPrototype=getProto&&getProto(getProto(values([])));NativeIteratorPrototype&&NativeIteratorPrototype!==Op&&hasOwn.call(NativeIteratorPrototype,iteratorSymbol)&&(IteratorPrototype=NativeIteratorPrototype);var Gp=GeneratorFunctionPrototype.prototype=Generator.prototype=Object.create(IteratorPrototype);function defineIteratorMethods(prototype){[\"next\",\"throw\",\"return\"].forEach(function(method){define(prototype,method,function(arg){return this._invoke(method,arg);});});}function AsyncIterator(generator,PromiseImpl){function invoke(method,arg,resolve,reject){var record=tryCatch(generator[method],generator,arg);if(\"throw\"!==record.type){var result=record.arg,value=result.value;return value&&\"object\"==typeof value&&hasOwn.call(value,\"__await\")?PromiseImpl.resolve(value.__await).then(function(value){invoke(\"next\",value,resolve,reject);},function(err){invoke(\"throw\",err,resolve,reject);}):PromiseImpl.resolve(value).then(function(unwrapped){result.value=unwrapped,resolve(result);},function(error){return invoke(\"throw\",error,resolve,reject);});}reject(record.arg);}var previousPromise;this._invoke=function(method,arg){function callInvokeWithMethodAndArg(){return new PromiseImpl(function(resolve,reject){invoke(method,arg,resolve,reject);});}return previousPromise=previousPromise?previousPromise.then(callInvokeWithMethodAndArg,callInvokeWithMethodAndArg):callInvokeWithMethodAndArg();};}function maybeInvokeDelegate(delegate,context){var method=delegate.iterator[context.method];if(undefined===method){if(context.delegate=null,\"throw\"===context.method){if(delegate.iterator.return&&(context.method=\"return\",context.arg=undefined,maybeInvokeDelegate(delegate,context),\"throw\"===context.method))return ContinueSentinel;context.method=\"throw\",context.arg=new TypeError(\"The iterator does not provide a 'throw' method\");}return ContinueSentinel;}var record=tryCatch(method,delegate.iterator,context.arg);if(\"throw\"===record.type)return context.method=\"throw\",context.arg=record.arg,context.delegate=null,ContinueSentinel;var info=record.arg;return info?info.done?(context[delegate.resultName]=info.value,context.next=delegate.nextLoc,\"return\"!==context.method&&(context.method=\"next\",context.arg=undefined),context.delegate=null,ContinueSentinel):info:(context.method=\"throw\",context.arg=new TypeError(\"iterator result is not an object\"),context.delegate=null,ContinueSentinel);}function pushTryEntry(locs){var entry={tryLoc:locs[0]};1 in locs&&(entry.catchLoc=locs[1]),2 in locs&&(entry.finallyLoc=locs[2],entry.afterLoc=locs[3]),this.tryEntries.push(entry);}function resetTryEntry(entry){var record=entry.completion||{};record.type=\"normal\",delete record.arg,entry.completion=record;}function Context(tryLocsList){this.tryEntries=[{tryLoc:\"root\"}],tryLocsList.forEach(pushTryEntry,this),this.reset(!0);}function values(iterable){if(iterable){var iteratorMethod=iterable[iteratorSymbol];if(iteratorMethod)return iteratorMethod.call(iterable);if(\"function\"==typeof iterable.next)return iterable;if(!isNaN(iterable.length)){var i=-1,next=function next(){for(;++i<iterable.length;){if(hasOwn.call(iterable,i))return next.value=iterable[i],next.done=!1,next;}return next.value=undefined,next.done=!0,next;};return next.next=next;}}return{next:doneResult};}function doneResult(){return{value:undefined,done:!0};}return GeneratorFunction.prototype=GeneratorFunctionPrototype,define(Gp,\"constructor\",GeneratorFunctionPrototype),define(GeneratorFunctionPrototype,\"constructor\",GeneratorFunction),GeneratorFunction.displayName=define(GeneratorFunctionPrototype,toStringTagSymbol,\"GeneratorFunction\"),exports.isGeneratorFunction=function(genFun){var ctor=\"function\"==typeof genFun&&genFun.constructor;return!!ctor&&(ctor===GeneratorFunction||\"GeneratorFunction\"===(ctor.displayName||ctor.name));},exports.mark=function(genFun){return Object.setPrototypeOf?Object.setPrototypeOf(genFun,GeneratorFunctionPrototype):(genFun.__proto__=GeneratorFunctionPrototype,define(genFun,toStringTagSymbol,\"GeneratorFunction\")),genFun.prototype=Object.create(Gp),genFun;},exports.awrap=function(arg){return{__await:arg};},defineIteratorMethods(AsyncIterator.prototype),define(AsyncIterator.prototype,asyncIteratorSymbol,function(){return this;}),exports.AsyncIterator=AsyncIterator,exports.async=function(innerFn,outerFn,self,tryLocsList,PromiseImpl){void 0===PromiseImpl&&(PromiseImpl=Promise);var iter=new AsyncIterator(wrap(innerFn,outerFn,self,tryLocsList),PromiseImpl);return exports.isGeneratorFunction(outerFn)?iter:iter.next().then(function(result){return result.done?result.value:iter.next();});},defineIteratorMethods(Gp),define(Gp,toStringTagSymbol,\"Generator\"),define(Gp,iteratorSymbol,function(){return this;}),define(Gp,\"toString\",function(){return\"[object Generator]\";}),exports.keys=function(object){var keys=[];for(var key in object){keys.push(key);}return keys.reverse(),function next(){for(;keys.length;){var key=keys.pop();if(key in object)return next.value=key,next.done=!1,next;}return next.done=!0,next;};},exports.values=values,Context.prototype={constructor:Context,reset:function reset(skipTempReset){if(this.prev=0,this.next=0,this.sent=this._sent=undefined,this.done=!1,this.delegate=null,this.method=\"next\",this.arg=undefined,this.tryEntries.forEach(resetTryEntry),!skipTempReset)for(var name in this){\"t\"===name.charAt(0)&&hasOwn.call(this,name)&&!isNaN(+name.slice(1))&&(this[name]=undefined);}},stop:function stop(){this.done=!0;var rootRecord=this.tryEntries[0].completion;if(\"throw\"===rootRecord.type)throw rootRecord.arg;return this.rval;},dispatchException:function dispatchException(exception){if(this.done)throw exception;var context=this;function handle(loc,caught){return record.type=\"throw\",record.arg=exception,context.next=loc,caught&&(context.method=\"next\",context.arg=undefined),!!caught;}for(var i=this.tryEntries.length-1;i>=0;--i){var entry=this.tryEntries[i],record=entry.completion;if(\"root\"===entry.tryLoc)return handle(\"end\");if(entry.tryLoc<=this.prev){var hasCatch=hasOwn.call(entry,\"catchLoc\"),hasFinally=hasOwn.call(entry,\"finallyLoc\");if(hasCatch&&hasFinally){if(this.prev<entry.catchLoc)return handle(entry.catchLoc,!0);if(this.prev<entry.finallyLoc)return handle(entry.finallyLoc);}else if(hasCatch){if(this.prev<entry.catchLoc)return handle(entry.catchLoc,!0);}else{if(!hasFinally)throw new Error(\"try statement without catch or finally\");if(this.prev<entry.finallyLoc)return handle(entry.finallyLoc);}}}},abrupt:function abrupt(type,arg){for(var i=this.tryEntries.length-1;i>=0;--i){var entry=this.tryEntries[i];if(entry.tryLoc<=this.prev&&hasOwn.call(entry,\"finallyLoc\")&&this.prev<entry.finallyLoc){var finallyEntry=entry;break;}}finallyEntry&&(\"break\"===type||\"continue\"===type)&&finallyEntry.tryLoc<=arg&&arg<=finallyEntry.finallyLoc&&(finallyEntry=null);var record=finallyEntry?finallyEntry.completion:{};return record.type=type,record.arg=arg,finallyEntry?(this.method=\"next\",this.next=finallyEntry.finallyLoc,ContinueSentinel):this.complete(record);},complete:function complete(record,afterLoc){if(\"throw\"===record.type)throw record.arg;return\"break\"===record.type||\"continue\"===record.type?this.next=record.arg:\"return\"===record.type?(this.rval=this.arg=record.arg,this.method=\"return\",this.next=\"end\"):\"normal\"===record.type&&afterLoc&&(this.next=afterLoc),ContinueSentinel;},finish:function finish(finallyLoc){for(var i=this.tryEntries.length-1;i>=0;--i){var entry=this.tryEntries[i];if(entry.finallyLoc===finallyLoc)return this.complete(entry.completion,entry.afterLoc),resetTryEntry(entry),ContinueSentinel;}},catch:function _catch(tryLoc){for(var i=this.tryEntries.length-1;i>=0;--i){var entry=this.tryEntries[i];if(entry.tryLoc===tryLoc){var record=entry.completion;if(\"throw\"===record.type){var thrown=record.arg;resetTryEntry(entry);}return thrown;}}throw new Error(\"illegal catch attempt\");},delegateYield:function delegateYield(iterable,resultName,nextLoc){return this.delegate={iterator:values(iterable),resultName:resultName,nextLoc:nextLoc},\"next\"===this.method&&(this.arg=undefined),ContinueSentinel;}},exports;}import*as dnerojs from'@dnerolabs/dnero-js';import _ from'lodash';import Api from'../../services/Api';import{reduxFetch}from'./Api';import{RESET,CREATE_SMART_CONTRACT_TRANSACTION,CREATE_SMART_CONTRACT_TRANSACTION_START,CREATE_SMART_CONTRACT_TRANSACTION_END}from\"../types/Transactions\";import Wallet from\"../../services/Wallet\";import Dnero from\"../../services/Dnero\";import Timeout from'await-timeout';import{hideLoader,hideModal,hideModals,showLoader,showModal}from\"./ui\";import Alerts from\"../../services/Alerts\";import DneroJS from\"../../libs/dnerojs.esm\";import ContractModes from\"../../constants/ContractModes\";import Router from\"../../services/Router\";import ModalTypes from\"../../constants/ModalTypes\";import{updateAccountStakes}from\"./Wallet\";import{sleep}from\"../../utils/Utils\";export function fetchDneroTransactions(){return function(dispatch,getState){var selectedAddress=_.get(getState(),'dneroWallet.selectedAddress');if(selectedAddress){return Wallet.controller.RPCApi.updateAccountTransactions({address:selectedAddress});}};}export function createSmartContractTransactionAsync(_x,_x2,_x3,_x4,_x5,_x6){return _createSmartContractTransactionAsync.apply(this,arguments);}function _createSmartContractTransactionAsync(){_createSmartContractTransactionAsync=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee5(dispatch,network,contractMode,contractAbi,txData,password){var metadata,address,sequence,unsignedTx,rawTxBytes,rawTxHex,signedTx,dryRunResponseJSON,dryRunResponse,opts,result;return _regeneratorRuntime().wrap(function _callee5$(_context5){while(1){switch(_context5.prev=_context5.next){case 0:metadata={network:network,contractMode:contractMode,txData:txData};//The decryption can take some time, so start the event early\ndispatch({type:CREATE_SMART_CONTRACT_TRANSACTION_START,metadata:metadata});//Let the spinners start, so we will delay the decryption/signing a bit\n_context5.next=4;return Timeout.set(1000);case 4:_context5.prev=4;address=Wallet.getWalletAddress();_context5.next=8;return Wallet.getDneroTxSequence(address,network);case 8:sequence=_context5.sent;unsignedTx=Dnero.unsignedSmartContractTx(txData,sequence);rawTxBytes=DneroJS.TxSigner.serializeTx(unsignedTx);rawTxHex=rawTxBytes.toString('hex').slice(2);_context5.next=14;return Wallet.signTransaction(network,unsignedTx,password);case 14:signedTx=_context5.sent;if(!signedTx){_context5.next=27;break;}dryRunResponseJSON=null;if(!(contractMode===ContractModes.DEPLOY)){_context5.next=24;break;}_context5.next=20;return Api.callSmartContract({data:rawTxHex},{network:network});case 20:dryRunResponse=_context5.sent;_context5.next=23;return dryRunResponse.json();case 23:dryRunResponseJSON=_context5.sent;case 24:opts={onSuccess:function onSuccess(dispatch,response){//Show success alert\nif(contractMode===ContractModes.DEPLOY){Alerts.showSuccess(\"Your smart contract has been deployed.\");var contractAddress=_.get(dryRunResponseJSON,['result','contract_address']);var contractABIB64=btoa(contractAbi);Router.push(\"/wallet/contract/interact?address=\".concat(contractAddress,\"&abi=\").concat(contractABIB64));}else{Alerts.showSuccess(\"Your transaction is now being processed.\");}//Hide the send modals\ndispatch(hideModals());},onError:function onError(dispatch,response){var errorMsg=_.get(response,['body','message'],\"Your transaction failed.\");Alerts.showError(errorMsg);}};//Call API to create the transaction\nresult=reduxFetch(CREATE_SMART_CONTRACT_TRANSACTION,function(){if(contractMode===ContractModes.DEPLOY||contractMode===ContractModes.EXECUTE){return Api.executeSmartContract({data:signedTx},{network:network});}},metadata,opts);return _context5.abrupt(\"return\",Promise.resolve(result));case 27:_context5.next=34;break;case 29:_context5.prev=29;_context5.t0=_context5[\"catch\"](4);//Signing failed so end the request\ndispatch({type:CREATE_SMART_CONTRACT_TRANSACTION_END});//Display error\nAlerts.showError(_context5.t0.message);return _context5.abrupt(\"return\",Promise.resolve(null));case 34:case\"end\":return _context5.stop();}}},_callee5,null,[[4,29]]);}));return _createSmartContractTransactionAsync.apply(this,arguments);}export function createSmartContractTransactionLegacy(network,contractMode,contractAbi,txData,password){return function(dispatch,getState){createSmartContractTransactionAsync(dispatch,network,contractMode,contractAbi,txData,password).then(function(thunk){if(thunk){dispatch(thunk);}});};}export function createSmartContractTransaction(contractMode,contractAbi,txData){return/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(dispatch,getState){var address,provider,transaction,sequence,callResult,contractAddress,contractABIB64;return _regeneratorRuntime().wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:dispatch(showLoader('Preparing transaction...'));//Let the spinners start, so we will delay the decryption/signing a bit\n_context.next=3;return sleep(1000);case 3:_context.prev=3;address=Wallet.getWalletAddress();provider=Wallet.controller.provider;transaction=new dnerojs.transactions.SmartContractTransaction(txData);_context.next=9;return provider.getTransactionCount(address);case 9:sequence=_context.sent;sequence=sequence+1;transaction.setSequence(sequence);_context.next=14;return provider.callSmartContract(transaction);case 14:callResult=_context.sent;_context.next=17;return sleep(1000);case 17:dispatch(hideLoader());dispatch(createTransactionRequest(transaction.toJson()));if(contractMode===ContractModes.DEPLOY){// Assume the TX goes through\ncontractAddress=_.get(callResult,['contract_address']);contractABIB64=btoa(contractAbi);Router.push(\"/wallet/contract/interact?address=\".concat(contractAddress,\"&abi=\").concat(contractABIB64));}_context.next=27;break;case 22:_context.prev=22;_context.t0=_context[\"catch\"](3);dispatch(hideLoader());//Display error\nAlerts.showError(_context.t0.message);return _context.abrupt(\"return\",Promise.resolve(null));case 27:_context.prev=27;dispatch(hideLoader());return _context.finish(27);case 30:case\"end\":return _context.stop();}}},_callee,null,[[3,22,27,30]]);}));return function(_x7,_x8){return _ref.apply(this,arguments);};}();}export function resetTransactionsState(){return{type:RESET};}export function createTransactionRequest(transactionRequest){return/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2(dispatch){var result;return _regeneratorRuntime().wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.prev=0;result=Wallet.controller.RPCApi.addTransactionRequest({transactionRequest:transactionRequest});dispatch(showModal({type:ModalTypes.CONFIRM_TRANSACTION,props:{closeable:false}}));return _context2.abrupt(\"return\",result);case 6:_context2.prev=6;_context2.t0=_context2[\"catch\"](0);return _context2.abrupt(\"return\",false);case 9:case\"end\":return _context2.stop();}}},_callee2,null,[[0,6]]);}));return function(_x9){return _ref2.apply(this,arguments);};}();}export function rejectTransactionRequest(transactionRequestId){return/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee3(dispatch){var result;return _regeneratorRuntime().wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_context3.prev=0;result=Wallet.controller.RPCApi.rejectTransactionRequest({transactionRequestId:transactionRequestId});dispatch(hideModal());return _context3.abrupt(\"return\",result);case 6:_context3.prev=6;_context3.t0=_context3[\"catch\"](0);return _context3.abrupt(\"return\",false);case 9:case\"end\":return _context3.stop();}}},_callee3,null,[[0,6]]);}));return function(_x10){return _ref3.apply(this,arguments);};}();}export function approveTransactionRequest(transactionRequestId,password){return/*#__PURE__*/function(){var _ref4=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee4(dispatch,getState){var transactionRequest,dependencies,totalTransactions,validPassword,result,selectedAddress,humanizedErrorMessage;return _regeneratorRuntime().wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:_context4.prev=0;transactionRequest=Wallet.controller.transactionsController.pendingTransactionRequests.get(transactionRequestId);dependencies=_.get(transactionRequest,'request.dependencies',[]);totalTransactions=dependencies.length+1;if(dependencies.length===0){dispatch(showLoader('Sending Transaction'));}else{dispatch(showLoader(\"Sending Transaction (1 / \".concat(totalTransactions,\")\")));}// Sleep a bit so the password check doesn't lag\n_context4.next=7;return sleep(1500);case 7:validPassword=Wallet.verifyPassword(password);if(validPassword){_context4.next=12;break;}dispatch(hideLoader());Alerts.showError('Wrong password. Your transaction could not be signed.');return _context4.abrupt(\"return\",false);case 12:_context4.next=14;return Wallet.controller.RPCApi.approveTransactionRequest({transactionRequestId:transactionRequestId,onDependencySent:function onDependencySent(){if(dependencies.length===0){dispatch(showLoader('Sending Transaction'));}else{dispatch(showLoader(\"Sending Transaction (\".concat(totalTransactions,\" / \").concat(totalTransactions,\")\")));}}});case 14:result=_context4.sent;dispatch(hideModals());if(window.location.href.includes('stakes')){selectedAddress=_.get(getState(),'dneroWallet.selectedAddress');dispatch(updateAccountStakes(selectedAddress));}dispatch(hideLoader());return _context4.abrupt(\"return\",result);case 21:_context4.prev=21;_context4.t0=_context4[\"catch\"](0);dispatch(hideLoader());humanizedErrorMessage=dnerojs.errors.humanizeErrorMessage(_context4.t0.message);Alerts.showError(humanizedErrorMessage);return _context4.abrupt(\"return\",false);case 27:case\"end\":return _context4.stop();}}},_callee4,null,[[0,21]]);}));return function(_x11,_x12){return _ref4.apply(this,arguments);};}();}","map":{"version":3,"names":["dnerojs","_","Api","reduxFetch","RESET","CREATE_SMART_CONTRACT_TRANSACTION","CREATE_SMART_CONTRACT_TRANSACTION_START","CREATE_SMART_CONTRACT_TRANSACTION_END","Wallet","Dnero","Timeout","hideLoader","hideModal","hideModals","showLoader","showModal","Alerts","DneroJS","ContractModes","Router","ModalTypes","updateAccountStakes","sleep","fetchDneroTransactions","dispatch","getState","selectedAddress","get","controller","RPCApi","updateAccountTransactions","address","createSmartContractTransactionAsync","network","contractMode","contractAbi","txData","password","metadata","type","set","getWalletAddress","getDneroTxSequence","sequence","unsignedTx","unsignedSmartContractTx","rawTxBytes","TxSigner","serializeTx","rawTxHex","toString","slice","signTransaction","signedTx","dryRunResponseJSON","DEPLOY","callSmartContract","data","dryRunResponse","json","opts","onSuccess","response","showSuccess","contractAddress","contractABIB64","btoa","push","onError","errorMsg","showError","result","EXECUTE","executeSmartContract","Promise","resolve","message","createSmartContractTransactionLegacy","then","thunk","createSmartContractTransaction","provider","transaction","transactions","SmartContractTransaction","getTransactionCount","setSequence","callResult","createTransactionRequest","toJson","resetTransactionsState","transactionRequest","addTransactionRequest","CONFIRM_TRANSACTION","props","closeable","rejectTransactionRequest","transactionRequestId","approveTransactionRequest","transactionsController","pendingTransactionRequests","dependencies","totalTransactions","length","validPassword","verifyPassword","onDependencySent","window","location","href","includes","humanizedErrorMessage","errors","humanizeErrorMessage"],"sources":["/Users/jjestrella/DNERO_Protocol/dnerowebwallet/src/state/actions/Transactions.js"],"sourcesContent":["import * as dnerojs from '@dnerolabs/dnero-js';\nimport _ from 'lodash';\nimport Api from '../../services/Api'\nimport {reduxFetch} from './Api'\nimport {\n    RESET,\n    CREATE_SMART_CONTRACT_TRANSACTION,\n    CREATE_SMART_CONTRACT_TRANSACTION_START,\n    CREATE_SMART_CONTRACT_TRANSACTION_END\n} from \"../types/Transactions\";\nimport Wallet from \"../../services/Wallet\";\nimport Dnero from \"../../services/Dnero\";\nimport Timeout from 'await-timeout';\nimport {hideLoader, hideModal, hideModals, showLoader, showModal} from \"./ui\";\nimport Alerts from \"../../services/Alerts\";\nimport DneroJS from \"../../libs/dnerojs.esm\";\nimport ContractModes from \"../../constants/ContractModes\";\nimport Router from \"../../services/Router\";\nimport ModalTypes from \"../../constants/ModalTypes\";\nimport {updateAccountStakes} from \"./Wallet\";\nimport {sleep} from \"../../utils/Utils\";\n\nexport function fetchDneroTransactions() {\n    return function (dispatch, getState) {\n        const selectedAddress = _.get(getState(), 'dneroWallet.selectedAddress');\n        if(selectedAddress){\n            return Wallet.controller.RPCApi.updateAccountTransactions({\n                address: selectedAddress\n            });\n        }\n    };\n}\n\nexport async function createSmartContractTransactionAsync(dispatch, network, contractMode, contractAbi, txData, password) {\n    let metadata = {\n        network: network,\n        contractMode: contractMode,\n        txData: txData,\n    };\n\n    //The decryption can take some time, so start the event early\n    dispatch({\n        type: CREATE_SMART_CONTRACT_TRANSACTION_START,\n        metadata: metadata\n    });\n\n    //Let the spinners start, so we will delay the decryption/signing a bit\n    await Timeout.set(1000);\n\n    try {\n        let address = Wallet.getWalletAddress();\n        let sequence = await Wallet.getDneroTxSequence(address, network);\n        let unsignedTx = Dnero.unsignedSmartContractTx(txData, sequence);\n        const rawTxBytes = DneroJS.TxSigner.serializeTx(unsignedTx);\n        const rawTxHex = rawTxBytes.toString('hex').slice(2);\n        let signedTx = await Wallet.signTransaction(network, unsignedTx, password);\n\n        if (signedTx) {\n            let dryRunResponseJSON = null;\n\n            if(contractMode === ContractModes.DEPLOY){\n                const dryRunResponse = await Api.callSmartContract({data: rawTxHex}, {network: network});\n                dryRunResponseJSON = await dryRunResponse.json();\n            }\n\n            let opts = {\n                onSuccess: function (dispatch, response) {\n                    //Show success alert\n                    if(contractMode === ContractModes.DEPLOY){\n                        Alerts.showSuccess(\"Your smart contract has been deployed.\");\n\n                        const contractAddress = _.get(dryRunResponseJSON, ['result', 'contract_address']);\n                        const contractABIB64 = btoa(contractAbi);\n                        Router.push(`/wallet/contract/interact?address=${contractAddress}&abi=${contractABIB64}`);\n                    }\n                    else{\n                        Alerts.showSuccess(\"Your transaction is now being processed.\");\n                    }\n\n                    //Hide the send modals\n                    dispatch(hideModals());\n                },\n                onError: function (dispatch, response) {\n                    const errorMsg = _.get(response, ['body', 'message'], \"Your transaction failed.\");\n\n                    Alerts.showError(errorMsg);\n                }\n            };\n\n            //Call API to create the transaction\n            let result = reduxFetch(CREATE_SMART_CONTRACT_TRANSACTION, function () {\n                if(contractMode === ContractModes.DEPLOY || contractMode === ContractModes.EXECUTE){\n                    return Api.executeSmartContract({data: signedTx}, {network: network});\n                }\n                }, metadata, opts);\n\n            return Promise.resolve(result);\n        }\n    }\n    catch (e) {\n        //Signing failed so end the request\n        dispatch({\n            type: CREATE_SMART_CONTRACT_TRANSACTION_END\n        });\n\n        //Display error\n        Alerts.showError(e.message);\n\n        return Promise.resolve(null);\n    }\n}\n\nexport function createSmartContractTransactionLegacy(network, contractMode, contractAbi, txData, password) {\n    return function (dispatch, getState) {\n        createSmartContractTransactionAsync(dispatch, network, contractMode, contractAbi, txData, password).then(function (thunk) {\n            if (thunk) {\n                dispatch(thunk);\n            }\n        });\n    };\n}\n\nexport function createSmartContractTransaction(contractMode, contractAbi, txData) {\n    return async function (dispatch, getState) {\n        dispatch(showLoader('Preparing transaction...'));\n\n        //Let the spinners start, so we will delay the decryption/signing a bit\n        await sleep(1000);\n\n        try {\n            let address = Wallet.getWalletAddress();\n            const provider = Wallet.controller.provider;\n            const transaction = new dnerojs.transactions.SmartContractTransaction(txData);\n            let sequence = await provider.getTransactionCount(address);\n            sequence = sequence + 1;\n            transaction.setSequence(sequence);\n            const callResult = await provider.callSmartContract(transaction);\n            await sleep(1000);\n            dispatch(hideLoader());\n\n            dispatch(createTransactionRequest(transaction.toJson()));\n\n            if(contractMode === ContractModes.DEPLOY){\n                // Assume the TX goes through\n                const contractAddress = _.get(callResult, ['contract_address']);\n                const contractABIB64 = btoa(contractAbi);\n                Router.push(`/wallet/contract/interact?address=${contractAddress}&abi=${contractABIB64}`);\n            }\n        }\n        catch (e) {\n            dispatch(hideLoader());\n\n            //Display error\n            Alerts.showError(e.message);\n\n            return Promise.resolve(null);\n        }\n        finally {\n            dispatch(hideLoader());\n        }\n    };\n}\n\nexport function resetTransactionsState(){\n    return {\n        type: RESET,\n    }\n}\n\nexport function createTransactionRequest(transactionRequest) {\n    return async (dispatch) => {\n        try {\n            const result = Wallet.controller.RPCApi.addTransactionRequest({\n                transactionRequest: transactionRequest\n            });\n\n            dispatch(showModal({\n                type: ModalTypes.CONFIRM_TRANSACTION,\n                props: {\n                    closeable: false\n                }\n            }));\n\n            return result;\n        }\n        catch (error) {\n            return false;\n        }\n    };\n}\n\nexport function rejectTransactionRequest(transactionRequestId) {\n    return async (dispatch) => {\n        try {\n            const result = Wallet.controller.RPCApi.rejectTransactionRequest({\n                transactionRequestId: transactionRequestId\n            });\n\n            dispatch(hideModal());\n\n            return result;\n        }\n        catch (error) {\n            return false;\n        }\n    };\n}\n\nexport function approveTransactionRequest(transactionRequestId, password) {\n    return async (dispatch, getState) => {\n        try {\n            const transactionRequest = Wallet.controller.transactionsController.pendingTransactionRequests.get(transactionRequestId);\n            const dependencies = _.get(transactionRequest, 'request.dependencies', []);\n            const totalTransactions = (dependencies.length + 1);\n\n            if(dependencies.length === 0){\n                dispatch(showLoader('Sending Transaction'));\n            }\n            else{\n                dispatch(showLoader(`Sending Transaction (1 / ${totalTransactions})`));\n            }\n\n            // Sleep a bit so the password check doesn't lag\n            await sleep(1500);\n\n            const validPassword = Wallet.verifyPassword(password);\n\n            if(!validPassword){\n                dispatch(hideLoader());\n                Alerts.showError('Wrong password. Your transaction could not be signed.');\n                return false;\n            }\n\n            const result = await Wallet.controller.RPCApi.approveTransactionRequest({\n                transactionRequestId: transactionRequestId,\n                onDependencySent: () => {\n                    if(dependencies.length === 0){\n                        dispatch(showLoader('Sending Transaction'));\n                    }\n                    else{\n                        dispatch(showLoader(`Sending Transaction (${totalTransactions} / ${totalTransactions})`));\n                    }\n                }\n            });\n            dispatch(hideModals());\n\n            if(window.location.href.includes('stakes')){\n                const selectedAddress = _.get(getState(), 'dneroWallet.selectedAddress');\n                dispatch(updateAccountStakes(selectedAddress));\n            }\n\n            dispatch(hideLoader());\n\n            return result;\n        }\n        catch (error) {\n            dispatch(hideLoader());\n            const humanizedErrorMessage = dnerojs.errors.humanizeErrorMessage(error.message);\n            Alerts.showError(humanizedErrorMessage);\n            return false;\n        }\n    };\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}