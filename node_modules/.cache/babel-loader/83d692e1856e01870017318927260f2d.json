{"ast":null,"code":"import _classCallCheck from\"/Users/jjestrella/DNERO_Protocol/dnerowebwallet/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/jjestrella/DNERO_Protocol/dnerowebwallet/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _assertThisInitialized from\"/Users/jjestrella/DNERO_Protocol/dnerowebwallet/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";import _inherits from\"/Users/jjestrella/DNERO_Protocol/dnerowebwallet/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/jjestrella/DNERO_Protocol/dnerowebwallet/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import _ from'lodash';import{connect}from'react-redux';import React from\"react\";import'./NavBar.css';import Wallet from\"../services/Wallet\";import{store}from'../state';import{logout as _logout}from\"../state/actions/Wallet\";import{copyToClipboard}from\"../utils/Utils\";import Alerts from\"../services/Alerts\";import{showModal}from\"../state/actions/ui\";import ModalTypes from\"../constants/ModalTypes\";import{getNetworkName}from\"../constants/Networks\";import NetworkSelector from\"./NetworkSelector\";var classNames=require('classnames');var NavBar=/*#__PURE__*/function(_React$Component){_inherits(NavBar,_React$Component);var _super=_createSuper(NavBar);function NavBar(){var _this;_classCallCheck(this,NavBar);_this=_super.call(this);_this.onNetworkBadgeClick=function(){var address=Wallet.getWalletAddress();if(address){alert(\"You cannot change networks while a wallet is unlocked.\");}else{store.dispatch(showModal({type:ModalTypes.NETWORK_SELECTOR}));}};_this.logout=_this.logout.bind(_assertThisInitialized(_this));_this.copyAddress=_this.copyAddress.bind(_assertThisInitialized(_this));return _this;}_createClass(NavBar,[{key:\"logout\",value:function logout(){store.dispatch(_logout());}},{key:\"copyAddress\",value:function copyAddress(){var address=Wallet.getWalletAddress();copyToClipboard(address);Alerts.showSuccess(\"Your address has been copied\");}},{key:\"renderAccountIfNeeded\",value:function renderAccountIfNeeded(){var address=Wallet.getWalletAddress();if(address){return/*#__PURE__*/React.createElement(\"div\",{className:\"NavBar__account\"},/*#__PURE__*/React.createElement(\"div\",{className:\"NavBar__wallet\"},/*#__PURE__*/React.createElement(\"div\",{className:\"NavBar__wallet-title\"},\"My Wallet:\"),/*#__PURE__*/React.createElement(\"div\",{className:\"NavBar__wallet-address\"},address),/*#__PURE__*/React.createElement(\"a\",{className:\"NavBar__wallet-copy-address-icon\",onClick:this.copyAddress},/*#__PURE__*/React.createElement(\"img\",{src:\"/img/icons/copy@2x.png\"}))),/*#__PURE__*/React.createElement(\"a\",{className:\"NavBar__logout\",onClick:this.logout},\"Log out\"));}else{return null;}}},{key:\"render\",value:function render(){var network=this.props.network;return/*#__PURE__*/React.createElement(\"div\",{className:classNames(\"NavBar\",{'NavBar--is-centered':this.props.centered})},/*#__PURE__*/React.createElement(\"div\",{style:{display:'flex',flexDirection:'column',alignItems:'center'}},/*#__PURE__*/React.createElement(\"img\",{className:\"NavBar__logo\",src:'/img/logo/dnero_wallet_logo@2x.png'}),!this.props.centered&&/*#__PURE__*/React.createElement(NetworkSelector,null)),this.renderAccountIfNeeded());}}]);return NavBar;}(React.Component);var mapStateToProps=function mapStateToProps(state,ownProps){return{network:state.wallet.network};};export default connect(mapStateToProps)(NavBar);","map":{"version":3,"names":["_","connect","React","Wallet","store","logout","copyToClipboard","Alerts","showModal","ModalTypes","getNetworkName","NetworkSelector","classNames","require","NavBar","onNetworkBadgeClick","address","getWalletAddress","alert","dispatch","type","NETWORK_SELECTOR","bind","copyAddress","showSuccess","network","props","centered","display","flexDirection","alignItems","renderAccountIfNeeded","Component","mapStateToProps","state","ownProps","wallet"],"sources":["/Users/jjestrella/DNERO_Protocol/dnerowebwallet/src/components/NavBar.js"],"sourcesContent":["import _ from 'lodash';\nimport {connect} from 'react-redux'\nimport React from \"react\";\nimport './NavBar.css';\nimport Wallet from \"../services/Wallet\";\nimport { store } from '../state';\nimport {logout} from \"../state/actions/Wallet\";\nimport {copyToClipboard} from \"../utils/Utils\";\nimport Alerts from \"../services/Alerts\";\nimport {showModal} from \"../state/actions/ui\";\nimport ModalTypes from \"../constants/ModalTypes\";\nimport {getNetworkName} from \"../constants/Networks\";\nimport NetworkSelector from \"./NetworkSelector\";\n\nconst classNames = require('classnames');\n\nclass NavBar extends React.Component {\n    constructor(){\n        super();\n\n        this.logout = this.logout.bind(this);\n        this.copyAddress = this.copyAddress.bind(this);\n    }\n\n    logout(){\n        store.dispatch(logout());\n    }\n\n    copyAddress(){\n        let address = Wallet.getWalletAddress();\n\n        copyToClipboard(address);\n\n        Alerts.showSuccess(\"Your address has been copied\");\n    }\n\n    onNetworkBadgeClick = () => {\n        let address = Wallet.getWalletAddress();\n\n        if(address){\n            alert(\"You cannot change networks while a wallet is unlocked.\")\n        }\n        else{\n            store.dispatch(showModal({\n                type: ModalTypes.NETWORK_SELECTOR,\n            }));\n        }\n    };\n\n    renderAccountIfNeeded(){\n        let address = Wallet.getWalletAddress();\n\n        if(address){\n            return (\n                <div className=\"NavBar__account\">\n                    <div className=\"NavBar__wallet\">\n                        <div className=\"NavBar__wallet-title\">\n                            My Wallet:\n                        </div>\n                        <div className=\"NavBar__wallet-address\">\n                            {address}\n                        </div>\n                        <a className=\"NavBar__wallet-copy-address-icon\"\n                           onClick={this.copyAddress}\n                        >\n                            <img src=\"/img/icons/copy@2x.png\"/>\n                        </a>\n                    </div>\n                    <a className=\"NavBar__logout\"\n                       onClick={this.logout}>\n                        Log out\n                    </a>\n                </div>\n            );\n        }\n        else{\n            return null;\n        }\n    }\n\n    render() {\n        const {network} = this.props;\n\n        return (\n            <div className={classNames(\"NavBar\", { 'NavBar--is-centered': this.props.centered })}>\n                <div style={{display: 'flex', flexDirection: 'column', alignItems: 'center'}}>\n                    <img className=\"NavBar__logo\" src={'/img/logo/dnero_wallet_logo@2x.png'}/>\n                    {\n                        !this.props.centered &&\n                        <NetworkSelector/>\n                    }\n                </div>\n\n                { this.renderAccountIfNeeded() }\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n    return {\n        network: state.wallet.network\n    };\n};\n\nexport default connect(mapStateToProps)(NavBar);\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}